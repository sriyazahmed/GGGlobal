{
  "openapi" : "3.0.2",
  "components" : {
    "securitySchemes" : {
      "BearerAuth" : {
        "type" : "http",
        "scheme" : "bearer"
      }
    }
  },
  "security" : [ {
    "BearerAuth" : [ ]
  } ],
  "info" : {
    "title" : "Estatespace Platform (Public) API",
    "description" : "Asset management automation platform",
    "version" : "0.7.3",
    "termsOfService" : "https://www.estatespace.com/terms-of-service/",
    "contact" : {
      "name" : "Estatespace Platform API",
      "url" : "https://www.estatespace.com",
      "email" : "support@griffingroupglobal.com"
    }
  },
  "servers" : [ {
    "url" : "https://dev.g3dev.io/api",
    "description" : "Development server public path"
  }, {
    "url" : "https://auth-dev.g3dev.io/api",
    "description" : "Auth Development server public path"
  }, {
    "url" : "https://test.g3dev.io/api",
    "description" : "Test server public path"
  }, {
    "url" : "https://auth-test.g3dev.io/api",
    "description" : "Auth Test server public path"
  } ],
  "tags" : [ {
    "name" : "Activity",
    "description" : "An activity is an object that may be presented on a calendar and may be moved through a workflow."
  }, {
    "name" : "Activitydefinition",
    "description" : "An activity definition is a template for creating calendar based recurrence items (activities)"
  }, {
    "name" : "Codesystem",
    "description" : "A codesystem represents a CTS (https://www.omg.org/cts2/index.htm) system of valueset data."
  }, {
    "name" : "Consumable",
    "description" : "A consumable represents a physical item used to perform an activity."
  }, {
    "name" : "Contact",
    "description" : "A contact represents a person or entity that and a means to communicate with them"
  }, {
    "name" : "Credentialmanager",
    "description" : "Credentialmanager allows to create and updates a estatespace user's credentials"
  }, {
    "name" : "Device",
    "description" : "A device represents a physical device used to access estatespace. estatespace uses these to send notifications."
  }, {
    "name" : "File",
    "description" : "A file is an abstract representation of data that is stored in a file on a computer"
  }, {
    "name" : "Group",
    "description" : "A group is a collection of roles"
  }, {
    "name" : "Heartbeat",
    "description" : "Heartbeat is a capability that allows any client to identify a estatespace instance."
  }, {
    "name" : "Locationhistory",
    "description" : "A locationhistory represents the location of an entity at a specified time."
  }, {
    "name" : "Login",
    "description" : "Login logs a credentialed user into estatespace."
  }, {
    "name" : "Namedlocation",
    "description" : "A Namedlocation represents the physical address where an event or activity can be held."
  }, {
    "name" : "Note",
    "description" : "A note is an item associated to a person or resource that provides additional information"
  }, {
    "name" : "Notificationstatus",
    "description" : "Notificatio status allows a estatespace client to get the current state of notifications for a user."
  }, {
    "name" : "Organization",
    "description" : "An organization is an object that represents a collection of people."
  }, {
    "name" : "Policy",
    "description" : "A policy is the most basic entity with which to describe an access permission"
  }, {
    "name" : "Preference",
    "description" : "A preference is a like or dislike for a user."
  }, {
    "name" : "Role",
    "description" : "A role is a collection of policies."
  }, {
    "name" : "Search",
    "description" : "Perfoms a search across several different microservices."
  }, {
    "name" : "Setting",
    "description" : "A setting is a value that tells estatespace hwo to operate on a per user basis within a specific area."
  }, {
    "name" : "Signup",
    "description" : "Signup is the intial route to register a new client to estatespace"
  }, {
    "name" : "Sop",
    "description" : "An SOP (Standard Operating Procedure) is a template for an Activity."
  }, {
    "name" : "Tag",
    "description" : "A tag is a general purpose item to allow for cross resource correlation."
  }, {
    "name" : "User",
    "description" : "A user is a person with credentials into estatespace. A user has groups that describes their permissions."
  }, {
    "name" : "Valueset",
    "description" : "A valueset represents a CTS (https://www.omg.org/cts2/index.htm) list of values"
  } ],
  "paths" : {
    "/Device/$register" : {
      "post" : {
        "description" : "This registers a device",
        "operationId" : "deviceregister",
        "tags" : [ "Device" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "resource" : {
                          "type" : "object",
                          "properties" : {
                            "userId" : {
                              "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                            },
                            "deviceToken" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "username" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "userAgent" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "domain" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "lastAccess" : {
                              "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                            },
                            "registrations" : {
                              "type" : "array",
                              "items" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example" : {
                "summary" : "Request body example",
                "value" : {
                  "resource" : "Parameters",
                  "parameter" : [ {
                    "name" : "device",
                    "resource" : {
                      "resource" : "device",
                      "deviceToken" : "F7262580BF296ED9C34D87331F88E76FE46F3113152082B479612252ADB887B0",
                      "userAgent" : "ios",
                      "registrations" : [ "file" ]
                    }
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully registered a device",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "id", "resource", "metadata", "userid", "deviceToken", "userAgent", "domain", "lastAccess", "registrations" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "userId" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "username" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "deviceToken" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "userAgent" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "domain" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "lastAccess" : {
                      "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                    },
                    "registrations" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Device~1%24register/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Device/$unregister" : {
      "post" : {
        "description" : "This registers a device",
        "operationId" : "deviceunregister",
        "tags" : [ "Device" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1Device~1%24register/post/requestBody/content/application~1json/schema"
              },
              "example" : {
                "summary" : "Request body example",
                "value" : {
                  "resource" : "Parameters",
                  "parameter" : [ {
                    "name" : "device",
                    "resource" : {
                      "resource" : "device",
                      "deviceToken" : "F7262580BF296ED9C34D87331F88E76FE46F3113152082B479612252ADB887B0",
                      "userAgent" : "ios",
                      "registrations" : [ "file" ]
                    }
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully registered a device",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Device~1%24register/post/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Device~1%24register/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Device/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Device microservice.",
        "operationId" : "devicehealth",
        "tags" : [ "Device" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Login/$gettokens" : {
      "post" : {
        "description" : "Returns auth tokens needed to access auth endpoints. Only present on auth domains. access_token is the Bearer auth token",
        "operationId" : "logingettokens",
        "tags" : [ "Login" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "username" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "password" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  }
                }
              },
              "example" : {
                "username" : "testuser",
                "password" : "**********"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully returns tokens to auth user",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "access_token" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "refresh_token" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "scope" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "id_token" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "token_type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "expires_in" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Login~1%24gettokens/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Login/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Login microservice.",
        "operationId" : "loginhealth",
        "tags" : [ "Login" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Heartbeat" : {
      "get" : {
        "description" : "Denotes a estatespace server and the server is running",
        "operationId" : "heartbeat",
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "tags" : [ "Heartbeat" ],
        "responses" : {
          "200" : {
            "description" : "Successful",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "issues" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "issues" : {
                      "type" : "array",
                      "items" : {
                        "description" : "An issue that describes what happened on the server",
                        "type" : "object",
                        "required" : [ "severity", "issue", "detail", "location" ],
                        "properties" : {
                          "severity" : {
                            "description" : "A coded value (aka enumeration). This has a defined code and a value intended for display to a human. Indicates that the value is taken from a set of controlled strings defined elsewhere (e.g., Value Set). A code is restricted to a string which has at least one character and no leading or trailing whitespace, and where there is no whitespace other than single spaces in the contents. regex: [^\\s]+([\\s]?[^\\s]+)*",
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "display" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              }
                            }
                          },
                          "issue" : {
                            "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema/properties/issues/items/properties/severity"
                          },
                          "detail" : {
                            "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema/properties/issues/items/properties/severity"
                          },
                          "location" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Sop" : {
      "get" : {
        "description" : "SOP shall be a estatespace Resource template that describes the way of performing a task or activity. This route returns all SOPs.",
        "operationId" : "sopgetall",
        "tags" : [ "Sop" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "assignedRole",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The Role to search for. This is either a string representing name or a URI reference to a Role."
        }, {
          "in" : "query",
          "name" : "priority",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The priority to search for. Typically, low, medium or high. May be comma separated to search for multiple"
        }, {
          "in" : "query",
          "name" : "start",
          "schema" : {
            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
          },
          "description" : "The datetime to search for. May be prepended with operators [gt, gte, lt, lte] and may be comma separated where the first datetime is the start date and the second is the end date."
        }, {
          "in" : "query",
          "name" : "end",
          "schema" : {
            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
          },
          "description" : "The datetime to search for. May be prepended with operators [gt, gte, lt, lte] and may be comma separated where the first datetime is the start date and the second is the end date."
        }, {
          "in" : "query",
          "name" : "assignedUser",
          "schema" : {
            "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
          },
          "description" : "The user to search for. This is either a string representing the user [firstname%20lastname] or a URI reference to a user."
        }, {
          "in" : "query",
          "name" : "title",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The title to search for. This is a string value representing the title of sop."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "id", "resource", "metadata", "title", "sopType" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "title" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "markdown" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/markdown"
                          },
                          "sopType" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "functionalArea" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "assignedRole" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
                          },
                          "assignedUser" : {
                            "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                          },
                          "start" : {
                            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                          },
                          "end" : {
                            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                          },
                          "duration" : {
                            "type" : "object",
                            "properties" : {
                              "value" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              },
                              "coding" : {
                                "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                              }
                            }
                          },
                          "category" : {
                            "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                          },
                          "season" : {
                            "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                          },
                          "priority" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "equipment" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/equipment/items"
                            }
                          },
                          "tags" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                            }
                          },
                          "scope" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "instructions" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/instructions/items"
                            }
                          },
                          "responsibilities" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                            }
                          },
                          "files" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                            }
                          },
                          "revisions" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/revisions/items"
                            }
                          },
                          "relationships" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/relationships/items"
                            }
                          },
                          "lastActivity" : {
                            "$ref" : "#/paths/~1Sop/post/responses/201/content/application~1json/schema/properties/lastActivity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Sop/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "SOP shall be a estatespace Resource template that describes the way of performing a task or activity. This route creates a SOP",
        "operationId" : "sopcreate",
        "tags" : [ "Sop" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "createdBy" : {
                        "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                      },
                      "dataUse" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "title" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "markdown" : {
                    "description" : "a string that may contain markdown syntax using [Common Mark](https://commonmark.org/)",
                    "type" : "string"
                  },
                  "sopType" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "functionalArea" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "assignedRole" : {
                    "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Role resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                    "type" : "string",
                    "format" : "URL"
                  },
                  "assignedUser" : {
                    "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                  },
                  "start" : {
                    "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                  },
                  "end" : {
                    "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                  },
                  "duration" : {
                    "type" : "object",
                    "properties" : {
                      "value" : {
                        "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                      },
                      "coding" : {
                        "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                      }
                    }
                  },
                  "category" : { },
                  "priority" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "equipment" : {
                    "type" : "array",
                    "items" : {
                      "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Equipment resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                      "type" : "string",
                      "format" : "URL"
                    }
                  },
                  "namedLocations" : {
                    "type" : "array",
                    "items" : {
                      "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Namedlocation resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                      "type" : "string",
                      "format" : "URL"
                    }
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                    }
                  },
                  "scope" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "instructions" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "posiiton" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        },
                        "description" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "method" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "activity" : {
                          "$ref" : "#/paths/~1Sop/post/responses/201/content/application~1json/schema/properties/lastActivity"
                        },
                        "equipment" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/equipment/items"
                          }
                        }
                      }
                    }
                  },
                  "responsibilities" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                    }
                  },
                  "files" : {
                    "type" : "array",
                    "items" : {
                      "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the File resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                      "type" : "string",
                      "format" : "URL"
                    }
                  },
                  "revisions" : {
                    "type" : "array",
                    "items" : {
                      "description" : "A history of the object",
                      "required" : [ "user", "updatedDate", "changes" ],
                      "properties" : {
                        "user" : {
                          "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                        },
                        "updatedDate" : {
                          "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                        },
                        "changes" : {
                          "type" : "array",
                          "items" : {
                            "description" : "a representation of a change to an item",
                            "required" : [ "field", "oldValue", "newValue" ],
                            "properties" : {
                              "field" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "oldValue" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "newValue" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "relationships" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "parent" : {
                          "$ref" : "#/paths/~1Locationhistory/get/parameters/7/schema"
                        },
                        "children" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Locationhistory/get/parameters/7/schema"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example" : {
                "title" : "test SOP",
                "functionalArea" : "Security",
                "metadata" : {
                  "createdBy" : "User/821fbc66-ddc4-401e-aa2a-6d41bcb2b8e1"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful creates a SOP",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "id", "resource", "metadata", "title", "sopType" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "title" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "markdown" : {
                      "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/markdown"
                    },
                    "sopType" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "functionalArea" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "assignedRole" : {
                      "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
                    },
                    "assignedUser" : {
                      "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                    },
                    "start" : {
                      "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                    },
                    "end" : {
                      "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                    },
                    "duration" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        },
                        "coding" : {
                          "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                        }
                      }
                    },
                    "category" : {
                      "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                    },
                    "season" : {
                      "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                    },
                    "priority" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "equipment" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/equipment/items"
                      }
                    },
                    "tags" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                      }
                    },
                    "scope" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "instructions" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/instructions/items"
                      }
                    },
                    "responsibilities" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                      }
                    },
                    "files" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                      }
                    },
                    "revisions" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/revisions/items"
                      }
                    },
                    "relationships" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/relationships/items"
                      }
                    },
                    "lastActivity" : {
                      "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the EventDefinition resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                      "type" : "string",
                      "format" : "URL"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Sop/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Sop/{id}" : {
      "get" : {
        "description" : "SOP shall be a estatespace Resource template that describes the way of performing a task or activity. This route returns a specific SOP",
        "operationId" : "sopgetbyid",
        "tags" : [ "Sop" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Sop/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Sop/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "SOP shall be a estatespace Resource template that describes the way of performing a task or activity. This route updates a specific sop",
        "operationId" : "sopupdatebyid",
        "tags" : [ "Sop" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Sop/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Sop/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "SOP shall be a estatespace Resource template that describes the way of performing a task or activity. This route deletes a specific SOP",
        "operationId" : "sopdeletebyid",
        "tags" : [ "Sop" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Sop/$json" : {
      "post" : {
        "description" : "SOP shall be a estatespace Resource template that describes the way of performing a task or activity. This route converts a markdown string to an SOP resource",
        "operationId" : "soppostwopjson",
        "tags" : [ "Sop" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "valueMarkdown" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful converted to SOP resource",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Sop/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Sop/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Sop/$markdown" : {
      "post" : {
        "description" : "SOP shall be a estatespace Resource template that describes the way of performing a task or activity. This route converts SOP resource to a markdown string",
        "operationId" : "soppostwopmarkdown",
        "tags" : [ "Sop" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "resource" : {
                          "$ref" : "#/paths/~1Sop/get/responses/200/content/application~1json/schema/properties/entries/items"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful converted to markdown",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "markdown" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Sop~1%24markdown/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Sop/$validate" : {
      "post" : {
        "description" : "SOP shall be a estatespace Resource template that describes the way of performing a task or activity. This route validates a markdown string",
        "operationId" : "soppostwopvalidate",
        "tags" : [ "Sop" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1Sop~1%24json/post/requestBody/content/application~1json/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful validated a markdown",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Sop/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Sop microservice.",
        "operationId" : "sophealth",
        "tags" : [ "Sop" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/User" : {
      "get" : {
        "description" : "Users represent estatespace platform users. This route returns all users currently on estatespace platform.",
        "operationId" : "usergetall",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "type",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The type to search for. This is a string (enum) representing the type of user."
        }, {
          "in" : "query",
          "name" : "active",
          "schema" : {
            "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
          },
          "description" : "The active to search for. This is a boolean value representing the status of user as active or not active."
        }, {
          "in" : "query",
          "name" : "username",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The username to search for. This is a string representing the username of user."
        }, {
          "in" : "query",
          "name" : "name.firstName",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The firstname to search for. This is a string representing the firstname of user."
        }, {
          "in" : "query",
          "name" : "name.lastName",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The lastname to search for. This is a string representing the lastname of user."
        }, {
          "in" : "query",
          "name" : "name.middleName",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The middleName to search for. This is a string representing the middleName of user."
        }, {
          "in" : "query",
          "name" : "name.nickName",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The nickName to search for. This is a string representing the nickName of user."
        }, {
          "in" : "query",
          "name" : "name.fullName",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The fullName to search for. This is a string representing the fullName of user."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "name", "active", "admin", "dataAdmin", "type", "username", "email" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "identifiers" : {
                            "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema/properties/identifiers"
                          },
                          "name" : {
                            "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema/properties/name"
                          },
                          "active" : {
                            "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                          },
                          "admin" : {
                            "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                          },
                          "dataAdmin" : {
                            "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                          },
                          "type" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "vendorType" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "contact" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema/properties/contact/items"
                            }
                          },
                          "username" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "email" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "security" : {
                            "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema/properties/security"
                          },
                          "groups" : {
                            "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema/properties/groups"
                          },
                          "managers" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                            }
                          },
                          "subordinates" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                            }
                          },
                          "aboutMe" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1User/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Users represent estatespace platform users. This route creates a user",
        "operationId" : "usercreate",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "dataUse" : {
                        "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                      }
                    }
                  },
                  "name" : {
                    "type" : "object",
                    "properties" : {
                      "firstName" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "lastName" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "active" : {
                    "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                  },
                  "admin" : {
                    "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                  },
                  "dataadmin" : {
                    "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                  },
                  "type" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "vendorType" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "username" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "email" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "security" : {
                    "type" : "object",
                    "properties" : {
                      "corporateLabels" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      },
                      "resourceLabels" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "permissions" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  },
                  "managers" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  },
                  "subordinates" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  },
                  "identifiers" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                    }
                  },
                  "contact" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  },
                  "groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  }
                }
              },
              "example" : {
                "name" : {
                  "firstName" : "Test",
                  "lastName" : "Mc.Tester"
                },
                "username" : "testmctester",
                "email" : "mctester@testing.com",
                "type" : "Int-Principal"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a user",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "name", "active", "admin", "dataAdmin", "type", "username", "email" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "identifiers" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "use", "value" ],
                        "properties" : {
                          "use" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "period" : {
                            "type" : "object",
                            "required" : [ "start", "end" ],
                            "properties" : {
                              "start" : {
                                "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                              },
                              "end" : {
                                "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                              }
                            }
                          },
                          "value" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    },
                    "name" : {
                      "type" : "object",
                      "required" : [ "firstName" ],
                      "properties" : {
                        "firstName" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "middleName" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "lastName" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "prefix" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "suffix" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "nickName" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "fullName" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "rank" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        }
                      }
                    },
                    "active" : {
                      "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                    },
                    "admin" : {
                      "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                    },
                    "dataAdmin" : {
                      "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "vendorType" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "contact" : {
                      "type" : "array",
                      "items" : {
                        "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Contact resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                        "type" : "string",
                        "format" : "URL"
                      }
                    },
                    "username" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "email" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "security" : {
                      "type" : "object",
                      "required" : [ "corporateLabels", "resourceLabels" ],
                      "properties" : {
                        "corporateLabels" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        },
                        "resourceLabels" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    },
                    "groups" : {
                      "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Group resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                      "type" : "string",
                      "format" : "URL"
                    },
                    "managers" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                      }
                    },
                    "subordinates" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                      }
                    },
                    "aboutMe" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/User/{id}" : {
      "get" : {
        "description" : "Users represent estatespace platform users. This route returns a specific user",
        "operationId" : "usergetbyid",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Users represent estatespace platform users. This route updates a specific user",
        "operationId" : "userupdatebyid",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Users represent estatespace platform users. This route deletes a specific user",
        "operationId" : "userdeletebyid",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/User/$bulkcreate" : {
      "post" : {
        "description" : "Users represent estatespace platform users. This route create bulk users",
        "operationId" : "userbulkcreate",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "resource" : {
                          "type" : "object",
                          "properties" : {
                            "metadata" : {
                              "type" : "object",
                              "properties" : {
                                "lastmodified" : {
                                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                                },
                                "version" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                }
                              }
                            },
                            "resource" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "type" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "total" : {
                              "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                            },
                            "entries" : {
                              "type" : "array",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "resource" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "metadata" : {
                                    "type" : "object",
                                    "properties" : {
                                      "dataUse" : {
                                        "description" : "A binary flag intended to represent logical truth values.",
                                        "type" : "boolean"
                                      }
                                    }
                                  },
                                  "name" : {
                                    "type" : "object",
                                    "properties" : {
                                      "firstName" : {
                                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                      },
                                      "lastName" : {
                                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                      }
                                    }
                                  },
                                  "active" : {
                                    "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                                  },
                                  "admin" : {
                                    "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                                  },
                                  "dataadmin" : {
                                    "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                                  },
                                  "type" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "vendorType" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "username" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "email" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "security" : {
                                    "type" : "object",
                                    "properties" : {
                                      "corporateLabels" : {
                                        "type" : "array",
                                        "items" : {
                                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                        }
                                      },
                                      "resourceLabels" : {
                                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                      }
                                    }
                                  },
                                  "permissions" : {
                                    "type" : "array",
                                    "items" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    }
                                  },
                                  "managers" : {
                                    "type" : "array",
                                    "items" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    }
                                  },
                                  "subordinates" : {
                                    "type" : "array",
                                    "items" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    }
                                  },
                                  "identifiers" : {
                                    "type" : "array",
                                    "items" : {
                                      "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                                    }
                                  },
                                  "contact" : {
                                    "type" : "array",
                                    "items" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    }
                                  },
                                  "groups" : {
                                    "type" : "array",
                                    "items" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example" : {
                "resource" : "Parameters",
                "parameters" : [ {
                  "name" : "Users",
                  "resource" : {
                    "metadata" : {
                      "lastmodified" : "2018-06-26T13:52:15.827Z",
                      "version" : "1.0.0"
                    },
                    "resource" : "Bundle",
                    "type" : "list",
                    "total" : 2,
                    "entries" : [ {
                      "name" : {
                        "firstName" : "Test",
                        "lastName" : "Mc.Tester"
                      },
                      "username" : "testmctester",
                      "email" : "mctester@testing.com",
                      "type" : "Int-Principal"
                    }, {
                      "name" : {
                        "firstName" : "Doesit",
                        "lastName" : "Work"
                      },
                      "username" : "doesitwork",
                      "email" : "does@itwork.com",
                      "type" : "Principal"
                    } ]
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates atleast one user",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "parameters" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "parameters" : {
                      "type" : "object",
                      "required" : [ "returnBundle", "errorBundle" ],
                      "properties" : {
                        "returnBundle" : {
                          "type" : "object",
                          "required" : [ "name", "resource" ],
                          "properties" : {
                            "name" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                              "enum" : "return"
                            },
                            "resource" : {
                              "type" : "object",
                              "properties" : {
                                "metadata" : {
                                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                                },
                                "resource" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "Bundle"
                                },
                                "type" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "list"
                                },
                                "total" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                },
                                "entries" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/paths/~1User/get/responses/200/content/application~1json/schema/properties/entries/items"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errorBundle" : {
                          "type" : "object",
                          "required" : [ "name", "resource" ],
                          "properties" : {
                            "name" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                              "enum" : "errors"
                            },
                            "resource" : {
                              "type" : "object",
                              "properties" : {
                                "metadata" : {
                                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                                },
                                "resource" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "Bundle"
                                },
                                "type" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "list"
                                },
                                "total" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                },
                                "entries" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1User~1%24bulkcreate/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/User/$currentuser" : {
      "get" : {
        "description" : "Obtains the currently logged in user",
        "operationId" : "usercurrentuser",
        "tags" : [ "User" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully obtained the currently logged in user",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/User/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the User microservice.",
        "operationId" : "userhealth",
        "tags" : [ "User" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activity" : {
      "get" : {
        "description" : "Activities are actionable items that may be assigned to a person or group. This route returns all activities the current user has access to.",
        "operationId" : "activitygetall",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "assignedUser",
          "schema" : {
            "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the User resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
            "type" : "string",
            "format" : "URL"
          },
          "description" : "The user to search for. This is either a string representing the user [firstname%20lastname] or a URI reference to a user."
        }, {
          "in" : "query",
          "name" : "creator",
          "schema" : {
            "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to either a Group or User resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
            "type" : "string",
            "format" : "URL"
          },
          "description" : "The user or group to search for. This is either a string representing either a Group or User resource or a URI reference to a user or group."
        }, {
          "in" : "query",
          "name" : "assignedRole",
          "schema" : {
            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
          },
          "description" : "The Role to search for. This is either a string representing the Role name or a URI reference to a Role."
        }, {
          "in" : "query",
          "name" : "priority",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The priority to search for. Typically, low, medium or high. May be comma separated to search for multiple"
        }, {
          "in" : "query",
          "name" : "start",
          "schema" : {
            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
          },
          "description" : "The datetime to search for. May be prepended with operators [gt, gte, lt, lte] and may be comma separated where the first datetime is the start date and the second is the end date."
        }, {
          "in" : "query",
          "name" : "end",
          "schema" : {
            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
          },
          "description" : "The datetime to search for. May be prepended with operators [gt, gte, lt, lte] and may be comma separated where the first datetime is the start date and the second is the end date."
        }, {
          "in" : "query",
          "name" : "status",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The status to search for. Typically, created, accepted, completed, etc. May be comma separated to search for multiple"
        }, {
          "in" : "query",
          "name" : "tome",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "No search value required. It shall search for Activities assigned to the current user with status as created or ready or requested or accepted or in-progress or on-hold or completed"
        }, {
          "in" : "query",
          "name" : "byme",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "No search value required. It shall search for Activities created by the current user with status as created or ready or requested or accepted or in-progress or on-hold or completed"
        }, {
          "in" : "query",
          "name" : "all",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "No search value required. It shall search for Activities assigned to or created by the current user with status as created or ready or requested or accepted or in-progress or on-hold or completed"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "name", "status" ],
                        "properties" : {
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "assignedRole" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
                          },
                          "assignedUser" : {
                            "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                          },
                          "creator" : {
                            "$ref" : "#/paths/~1Activity/get/parameters/9/schema"
                          },
                          "invitations" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/invitations/items"
                            }
                          },
                          "note" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "namedLocations" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/namedLocations/items"
                            }
                          },
                          "instructions" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/instructions/items"
                            }
                          },
                          "priority" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "start" : {
                            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                          },
                          "end" : {
                            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                          },
                          "duration" : {
                            "type" : "object",
                            "properties" : {
                              "value" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              },
                              "coding" : {
                                "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                              }
                            }
                          },
                          "category" : {
                            "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                          },
                          "workflow" : {
                            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/workflow"
                          },
                          "status" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "files" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                            }
                          },
                          "tags" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                            }
                          },
                          "equipment" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/equipment/items"
                            }
                          },
                          "functionalArea" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "activityDefinition" : {
                            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/activityDefinition"
                          },
                          "sop" : {
                            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/sop"
                          },
                          "relationships" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/relationships/items"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Activitys are actionable items that may be assigned to a person or group. This route creates a activity",
        "operationId" : "activitycreate",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1Activity/get/responses/200/content/application~1json/schema/properties/entries/items"
              },
              "example" : {
                "name" : "Test Activity",
                "type" : "Activity",
                "start" : "2018-03-23T18:31:36.883Z",
                "end" : "2019-03-23T18:31:36.883Z"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a activity",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activity/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Activity microservice.",
        "operationId" : "activityhealth",
        "tags" : [ "Activity" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activity/{id}" : {
      "get" : {
        "description" : "Activitys are actionable items that may be assigned to a person or group. This route returns a specific activity",
        "operationId" : "activitygetbyid",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Activitys are actionable items that may be assigned to a person or group. This route updates a specific activity",
        "operationId" : "activityupdatebyid",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Activitys are actionable items that may be assigned to a person or group. This route deletes a specific activity",
        "operationId" : "activitydeletebyid",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activity/$sop" : {
      "get" : {
        "description" : "When sent a valid SOPId, This route returns a payload that can be sent as the body on a POST /Activity call to create the Activity.",
        "operationId" : "activitycreatesop",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "in" : "query",
          "name" : "sopid",
          "schema" : {
            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
          },
          "description" : "The SOP Id to map an SOP resource to an Activity."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully returns an activity (not saved) from the provided sop id",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activity/{id}/$transition" : {
      "post" : {
        "description" : "Transition moves an activity along a workflow.",
        "operationId" : "activityidwoptransition",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "valueString" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully transisitions an activity",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activity/{id}/$setparent" : {
      "post" : {
        "description" : "Setparent sets the parent activity to the current activity as specified by id.",
        "operationId" : "activitysetparent",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "valueReference" : {
                          "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully set the activity's parent",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "name", "status" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "name" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "assignedRole" : {
                      "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
                    },
                    "assignedUser" : {
                      "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                    },
                    "creator" : {
                      "$ref" : "#/paths/~1Activity/get/parameters/9/schema"
                    },
                    "invitations" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "attendee" : {
                            "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                          },
                          "status" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    },
                    "note" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "namedLocations" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/namedLocations/items"
                      }
                    },
                    "instructions" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/instructions/items"
                      }
                    },
                    "priority" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "start" : {
                      "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                    },
                    "end" : {
                      "description" : "A date that is combined with a time of day (hours, minutes, seconds) with fractional seconds that is based on a 24-hour clock. A timezone must be included. regex: \\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01]) ([0-1][0-9]|2[0-3])\\:([0-5][0-9])\\:([0-5][0-9])\\.([0-9]{3,7})( ([\\-\\+]([0-1][0-9])\\:00))? ref: [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)",
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "duration" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        },
                        "coding" : {
                          "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                        }
                      }
                    },
                    "category" : {
                      "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                    },
                    "workflow" : {
                      "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the workflow resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                      "type" : "string",
                      "format" : "URL"
                    },
                    "status" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "files" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                      }
                    },
                    "tags" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                      }
                    },
                    "equipment" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/equipment/items"
                      }
                    },
                    "functionalArea" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "activityDefinition" : {
                      "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the ActivityDefinition resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                      "type" : "string",
                      "format" : "URL"
                    },
                    "sop" : {
                      "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Sop resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                      "type" : "string",
                      "format" : "URL"
                    },
                    "relationships" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/relationships/items"
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activity/{id}/$addchildren" : {
      "post" : {
        "description" : "Addchildren add child activities to the current activity as specified by id.",
        "operationId" : "activityaddchildren",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "valueArrayreference" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully adds children to the activity",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activity/{id}/$removechildren" : {
      "post" : {
        "description" : "Removechildren removes child activities from the current activity as specified by id.",
        "operationId" : "activityremovechildren",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24addchildren/post/requestBody/content/application~1json/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully removes children from the activity",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activity/{id}/$addchild" : {
      "post" : {
        "description" : "Adds a child to the current activity as specified by id.",
        "operationId" : "activityaddchild",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "valueReference" : {
                          "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully add a child to the activity and return the activity resource",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activity/{id}/$removechild" : {
      "post" : {
        "description" : "Removes a child from the current activity as specified by id.",
        "operationId" : "activityremovechild",
        "tags" : [ "Activity" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24addchild/post/requestBody/content/application~1json/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully removes a child from the activity and return the activity resource",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activitydefinition" : {
      "get" : {
        "description" : "ActivityDefinitions are template items that may be used to create tasks or activity from. This route returns all ActivityDefinitions the current user has access to.",
        "operationId" : "activityDefinitiongetall",
        "tags" : [ "Activitydefinition" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "template.assignedUser",
          "schema" : {
            "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
          },
          "description" : "The user to search for. This is either a string representing the user [firstname%20lastname] or a URI reference to a user."
        }, {
          "in" : "query",
          "name" : "template.creator",
          "schema" : {
            "$ref" : "#/paths/~1Activity/get/parameters/9/schema"
          },
          "description" : "The user to search for. This is either a string representing the user [firstname%20lastname] or a URI reference to a user."
        }, {
          "in" : "query",
          "name" : "plannedAssignee",
          "schema" : {
            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
          },
          "description" : "The Group to search for. This is either a string representing the Group name or a URI reference to a Group."
        }, {
          "in" : "query",
          "name" : "template.priority",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The priority to search for. Typically, low, medium or high. May be comma separated to search for multiple"
        }, {
          "in" : "query",
          "name" : "template.start",
          "schema" : {
            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
          },
          "description" : "The datetime to search for. May be prepended with operators [gt, gte, lt, lte] and may be comma separated where the first datetime is the start date and the second is the end date."
        }, {
          "in" : "query",
          "name" : "template.end",
          "schema" : {
            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
          },
          "description" : "The datetime to search for. May be prepended with operators [gt, gte, lt, lte] and may be comma separated where the first datetime is the start date and the second is the end date."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "template", "trigger" ],
                        "properties" : {
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "trigger" : {
                            "$ref" : "#/paths/~1Activitydefinition/post/requestBody/content/application~1json/schema/properties/trigger"
                          },
                          "template" : {
                            "type" : "object",
                            "required" : [ "name", "type", "start" ],
                            "properties" : {
                              "name" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "assignedRole" : {
                                "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
                              },
                              "assignedUser" : {
                                "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                              },
                              "creator" : {
                                "$ref" : "#/paths/~1Activity/get/parameters/9/schema"
                              },
                              "invitations" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/invitations/items"
                                }
                              },
                              "note" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "namedLocations" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/namedLocations/items"
                                }
                              },
                              "instructions" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/instructions/items"
                                }
                              },
                              "priority" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "start" : {
                                "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                              },
                              "end" : {
                                "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                              },
                              "duration" : {
                                "type" : "object",
                                "properties" : {
                                  "value" : {
                                    "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                  },
                                  "coding" : {
                                    "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                                  }
                                }
                              },
                              "category" : {
                                "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                              },
                              "workflow" : {
                                "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/workflow"
                              },
                              "status" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "files" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                                }
                              },
                              "tags" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                                }
                              },
                              "functionalArea" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "sop" : {
                                "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/sop"
                              },
                              "relationships" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/relationships/items"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activitydefinition/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "ActivityDefinitions are template items that may be used to create tasks or activity from. This route creates a activityDefinition",
        "operationId" : "activityDefinitioncreate",
        "tags" : [ "Activitydefinition" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "template" : {
                    "$ref" : "#/paths/~1Activity/get/responses/200/content/application~1json/schema/properties/entries/items"
                  },
                  "trigger" : {
                    "type" : "object",
                    "properties" : {
                      "startDate" : {
                        "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                      },
                      "calendarRepetition" : {
                        "type" : "object",
                        "properties" : {
                          "repetitionType" : {
                            "type" : "object",
                            "properties" : {
                              "daily" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                }
                              },
                              "weekly" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                }
                              },
                              "monthly" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                }
                              },
                              "yearly" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                }
                              }
                            }
                          },
                          "period" : {
                            "type" : "object",
                            "properties" : {
                              "start" : {
                                "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                              },
                              "end" : {
                                "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                              }
                            }
                          },
                          "repetitions" : {
                            "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                          }
                        }
                      },
                      "gravityEventType" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "gravityEventId" : {
                        "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                      }
                    }
                  }
                }
              },
              "example" : {
                "template" : {
                  "name" : "Activity Definition Test",
                  "type" : "Activity",
                  "start" : "2018-03-23T18:31:36.883Z",
                  "end" : "2019-03-23T18:31:36.883Z"
                },
                "trigger" : {
                  "startDate" : "2019-03-26T00:00:00.000Z",
                  "calendarRepetition" : {
                    "repetitionType" : {
                      "daily" : [ ]
                    },
                    "period" : {
                      "start" : "2019-03-26T00:00:00.000Z",
                      "end" : "2020-03-22T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a activityDefinition",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "template", "trigger" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "trigger" : {
                      "$ref" : "#/paths/~1Activitydefinition/post/requestBody/content/application~1json/schema/properties/trigger"
                    },
                    "template" : {
                      "type" : "object",
                      "required" : [ "name", "type", "start" ],
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "assignedRole" : {
                          "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
                        },
                        "assignedUser" : {
                          "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                        },
                        "creator" : {
                          "$ref" : "#/paths/~1Activity/get/parameters/9/schema"
                        },
                        "invitations" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/invitations/items"
                          }
                        },
                        "note" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "namedLocations" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/namedLocations/items"
                          }
                        },
                        "instructions" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/instructions/items"
                          }
                        },
                        "priority" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "start" : {
                          "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                        },
                        "end" : {
                          "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                        },
                        "duration" : {
                          "type" : "object",
                          "properties" : {
                            "value" : {
                              "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                            },
                            "coding" : {
                              "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                            }
                          }
                        },
                        "category" : {
                          "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                        },
                        "workflow" : {
                          "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/workflow"
                        },
                        "status" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "files" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                          }
                        },
                        "tags" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                          }
                        },
                        "functionalArea" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "sop" : {
                          "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/sop"
                        },
                        "relationships" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/relationships/items"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activitydefinition/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activitydefinition/$sop" : {
      "get" : {
        "description" : "When sent a valid SOPId, This route returns a payload that can be sent as the body on a POST /ActivityDefinition call to create the ActivityDefinition.",
        "operationId" : "activityDefinitioncreatesop",
        "tags" : [ "Activitydefinition" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "in" : "query",
          "name" : "sopid",
          "schema" : {
            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
          },
          "description" : "The SOP Id to map an SOP resource to an Activitydefinition."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully returns an activityDefinition (not saved) from the provided sop id",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activitydefinition/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activitydefinition/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activitydefinition/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Activitydefinition microservice.",
        "operationId" : "activityDefinitionhealth",
        "tags" : [ "Activitydefinition" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Activitydefinition/{id}" : {
      "get" : {
        "description" : "ActivityDefinitions are template items that may be used to create tasks or activity from. This route returns a specific activityDefinition",
        "operationId" : "activityDefinitiongetbyid",
        "tags" : [ "Activitydefinition" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activitydefinition/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activitydefinition/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "ActivityDefinitions are template items that may be used to create tasks or activity from. This route updates a specific activityDefinition",
        "operationId" : "activityDefinitionupdatebyid",
        "tags" : [ "Activitydefinition" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activitydefinition/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Activitydefinition/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "ActivityDefinitions are template items that may be used to create tasks or activity from. This route deletes a specific activityDefinition",
        "operationId" : "activityDefinitiondeletebyid",
        "tags" : [ "Activitydefinition" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Policy" : {
      "get" : {
        "description" : "Policy represent estatespace platform policy. This route returns all policies currently on estatespace platform.",
        "operationId" : "policygetall",
        "tags" : [ "Policy" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "action",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The type to search for. This is a string (enum) representing the action/rights for a role."
        }, {
          "in" : "query",
          "name" : "entity",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The entity to search for. This is a string (enum) representing the entity of role."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "action", "entity" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "action" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "entity" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Policy/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Policys represent estatespace platform policy. This route creates a policy",
        "operationId" : "policycreate",
        "tags" : [ "Policy" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "entity" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "action" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  }
                }
              },
              "example" : {
                "action" : "Create",
                "entity" : "User"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a policy",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "action", "entity" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "action" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "entity" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Policy/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Policy/{id}" : {
      "get" : {
        "description" : "Policys represent estatespace platform policy. This route returns a specific policy",
        "operationId" : "policygetbyid",
        "tags" : [ "Policy" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Policy/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Policy/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Policy represent estatespace platform policy. This route updates a specific policy",
        "operationId" : "policyupdatebyid",
        "tags" : [ "Policy" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Policy/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Policy/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Policy represent estatespace platform policy. This route deletes a specific policy",
        "operationId" : "policydeletebyid",
        "tags" : [ "Policy" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Policy/$bulkcreate" : {
      "post" : {
        "description" : "Policys represent estatespace platform policies. This route create bulk policies",
        "operationId" : "policybulkcreate",
        "tags" : [ "Policy" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "resource" : {
                          "type" : "object",
                          "properties" : {
                            "metadata" : {
                              "type" : "object",
                              "properties" : {
                                "lastmodified" : {
                                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                                },
                                "version" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                }
                              }
                            },
                            "resource" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "type" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "total" : {
                              "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                            },
                            "entries" : {
                              "type" : "array",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "entity" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "action" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example" : {
                "resource" : "Parameters",
                "parameters" : [ {
                  "name" : "Users",
                  "resource" : {
                    "metadata" : {
                      "lastmodified" : "2018-06-26T13:52:15.827Z",
                      "version" : "1.0.0"
                    },
                    "resource" : "Bundle",
                    "type" : "list",
                    "total" : 1,
                    "entries" : [ {
                      "resource" : {
                        "entity" : "testEntity1",
                        "action" : "Create"
                      }
                    } ]
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates atleast one policy",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "parameters" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "parameters" : {
                      "type" : "object",
                      "required" : [ "returnBundle", "errorBundle" ],
                      "properties" : {
                        "returnBundle" : {
                          "type" : "object",
                          "required" : [ "name", "resource" ],
                          "properties" : {
                            "name" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                              "enum" : "return"
                            },
                            "resource" : {
                              "type" : "object",
                              "properties" : {
                                "metadata" : {
                                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                                },
                                "resource" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "Bundle"
                                },
                                "type" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "list"
                                },
                                "total" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                },
                                "entries" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/paths/~1Policy/get/responses/200/content/application~1json/schema/properties/entries/items"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errorBundle" : {
                          "type" : "object",
                          "required" : [ "name", "resource" ],
                          "properties" : {
                            "name" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                              "enum" : "errors"
                            },
                            "resource" : {
                              "type" : "object",
                              "properties" : {
                                "metadata" : {
                                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                                },
                                "resource" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "Bundle"
                                },
                                "type" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "list"
                                },
                                "total" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                },
                                "entries" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Policy~1%24bulkcreate/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Policy/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Policy microservice.",
        "operationId" : "policyhealth",
        "tags" : [ "Policy" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Role" : {
      "get" : {
        "description" : "Role represent estatespace platform role. This route returns all roles currently on estatespace platform.",
        "operationId" : "rolegetall",
        "tags" : [ "Role" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "type",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The type to search for. This is a string (enum) representing the type of role."
        }, {
          "in" : "query",
          "name" : "name",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The name to search for. This is a string value representing the name of role."
        }, {
          "in" : "query",
          "name" : "policies",
          "schema" : {
            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
          },
          "description" : "The policy to search for. This is a string value representing the policy as in a role."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "name", "type" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "type" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "policies" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Role/post/responses/201/content/application~1json/schema/properties/policies/items"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Role/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Roles represent estatespace platform roles. This route creates a role",
        "operationId" : "rolecreate",
        "tags" : [ "Role" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "policies" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                    }
                  }
                }
              },
              "example" : {
                "name" : "testRole",
                "type" : "permission",
                "policies" : [ "7302088f-a495-4aea-b2be-4d3e595a904a" ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a role",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "name", "type" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "name" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "policies" : {
                      "type" : "array",
                      "items" : {
                        "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Policy resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                        "type" : "string",
                        "format" : "URL"
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Role/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Role/{id}" : {
      "get" : {
        "description" : "Roles represent estatespace platform roles. This route returns a specific role",
        "operationId" : "rolegetbyid",
        "tags" : [ "Role" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Role/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Role/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Role represent estatespace platform role. This route updates a specific role",
        "operationId" : "roleupdatebyid",
        "tags" : [ "Role" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Role/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Role/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Roles represent estatespace platform roles. This route deletes a specific role",
        "operationId" : "roledeletebyid",
        "tags" : [ "Role" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Role/$bulkcreate" : {
      "post" : {
        "description" : "Roles represent estatespace platform roles. This route create bulk roles",
        "operationId" : "rolebulkcreate",
        "tags" : [ "Role" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "policies" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example" : {
                "resource" : "Parameters",
                "parameters" : [ {
                  "name" : "Users",
                  "resource" : {
                    "metadata" : {
                      "lastmodified" : "2018-06-26T13:52:15.827Z",
                      "version" : "1.0.0"
                    },
                    "resource" : "Bundle",
                    "type" : "list",
                    "total" : 2,
                    "entries" : [ {
                      "metadata" : {
                        "dataUse" : "test"
                      },
                      "resource" : "Role",
                      "name" : "test1",
                      "type" : "permission",
                      "policies" : [ "b79ec0ea-4cf7-45fd-a6a9-4b6fb2314ace", "b79ec0ea-4cf7-45fd-a6a9-4b6fb2314ace" ]
                    } ]
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates atleast one role",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "parameters" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "parameters" : {
                      "type" : "object",
                      "required" : [ "returnBundle", "errorBundle" ],
                      "properties" : {
                        "returnBundle" : {
                          "type" : "object",
                          "required" : [ "name", "resource" ],
                          "properties" : {
                            "name" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                              "enum" : "return"
                            },
                            "resource" : {
                              "type" : "object",
                              "properties" : {
                                "metadata" : {
                                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                                },
                                "resource" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "Bundle"
                                },
                                "type" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "list"
                                },
                                "total" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                },
                                "entries" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/paths/~1Role/get/responses/200/content/application~1json/schema/properties/entries/items"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errorBundle" : {
                          "type" : "object",
                          "required" : [ "name", "resource" ],
                          "properties" : {
                            "name" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                              "enum" : "errors"
                            },
                            "resource" : {
                              "type" : "object",
                              "properties" : {
                                "metadata" : {
                                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                                },
                                "resource" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "Bundle"
                                },
                                "type" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "list"
                                },
                                "total" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                },
                                "entries" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Role~1%24bulkcreate/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Role/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Role microservice.",
        "operationId" : "rolehealth",
        "tags" : [ "Role" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Group" : {
      "get" : {
        "description" : "Group represent estatespace platform group. This route returns all groups currently on estatespace platform.",
        "operationId" : "groupgetall",
        "tags" : [ "Group" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "type",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The type to search for. This is a string (enum) representing the type of group."
        }, {
          "in" : "query",
          "name" : "name",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The name to search for. This is a string value representing the name of group."
        }, {
          "in" : "query",
          "name" : "roles",
          "schema" : {
            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
          },
          "description" : "The role to search for. This is a string value representing the roles as in a group."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "name", "type" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "name" : {
                            "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema/properties/name"
                          },
                          "type" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "roles" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Group/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Groups represent estatespace platform roles. This route creates a group",
        "operationId" : "groupcreate",
        "tags" : [ "Group" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "dataUse" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "name" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "type" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "roles" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                    }
                  }
                }
              },
              "example" : {
                "metadata" : {
                  "dataUse" : "test"
                },
                "resource" : "Group",
                "name" : "testGroup",
                "type" : "permission",
                "roles" : [ "b79ccffb-4ab5-4ae1-b3f5-78d7856f4738" ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a role",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "name", "type" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "name" : {
                      "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema/properties/name"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "roles" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Group/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Group/{id}" : {
      "get" : {
        "description" : "Groups represent estatespace platform groups. This route returns a specific group",
        "operationId" : "groupgetbyid",
        "tags" : [ "Group" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Group/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Group/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Group represent estatespace platform group. This route updates a specific group",
        "operationId" : "groupupdatebyid",
        "tags" : [ "Group" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Group/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Group/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Groups represent estatespace platform groups. This route deletes a specific group",
        "operationId" : "groupdeletebyid",
        "tags" : [ "Group" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Group/$bulkcreate" : {
      "post" : {
        "description" : "Groups represent estatespace platform groups. This route create bulk groups",
        "operationId" : "groupbulkcreate",
        "tags" : [ "Group" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "resource" : {
                          "type" : "object",
                          "properties" : {
                            "metadata" : {
                              "type" : "object",
                              "properties" : {
                                "lastmodified" : {
                                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                                },
                                "version" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                }
                              }
                            },
                            "resource" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "type" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "total" : {
                              "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                            },
                            "entries" : {
                              "type" : "array",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "metadata" : {
                                    "type" : "object",
                                    "properties" : {
                                      "dataUse" : {
                                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                      }
                                    }
                                  },
                                  "resource" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "name" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "type" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "roles" : {
                                    "type" : "array",
                                    "items" : {
                                      "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example" : {
                "esource" : "Parameters",
                "parameters" : [ {
                  "name" : "Users",
                  "resource" : {
                    "metadata" : {
                      "lastmodified" : "2018-06-26T13:52:15.827Z",
                      "version" : "1.0.0"
                    },
                    "resource" : "Bundle",
                    "type" : "list",
                    "total" : 1,
                    "entries" : [ {
                      "resource" : {
                        "metadata" : {
                          "dataUse" : "test"
                        },
                        "resource" : "Group",
                        "name" : "TripScheduler1",
                        "type" : "permission",
                        "roles" : [ "7c0f8130-f184-4aa7-92aa-9f60c14abce6" ]
                      }
                    } ]
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates atleast one role",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "parameters" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "parameters" : {
                      "type" : "object",
                      "required" : [ "returnBundle", "errorBundle" ],
                      "properties" : {
                        "returnBundle" : {
                          "type" : "object",
                          "required" : [ "name", "resource" ],
                          "properties" : {
                            "name" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                              "enum" : "return"
                            },
                            "resource" : {
                              "type" : "object",
                              "properties" : {
                                "metadata" : {
                                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                                },
                                "resource" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "Bundle"
                                },
                                "type" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "list"
                                },
                                "total" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                },
                                "entries" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/paths/~1Group/get/responses/200/content/application~1json/schema/properties/entries/items"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errorBundle" : {
                          "type" : "object",
                          "required" : [ "name", "resource" ],
                          "properties" : {
                            "name" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                              "enum" : "errors"
                            },
                            "resource" : {
                              "type" : "object",
                              "properties" : {
                                "metadata" : {
                                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                                },
                                "resource" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "Bundle"
                                },
                                "type" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "list"
                                },
                                "total" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                },
                                "entries" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Group~1%24bulkcreate/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Group/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Group microservice.",
        "operationId" : "grouphealth",
        "tags" : [ "Group" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Tag" : {
      "get" : {
        "description" : "Tag represent estatespace platform tag. This route returns all tags currently on estatespace platform.",
        "operationId" : "taggetall",
        "tags" : [ "Tag" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "type",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The type to search for. This is a string (enum) representing the type of tag."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "type", "tag" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "type" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "tag" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Tag/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Tags represent estatespace platform roles. This route creates a tag",
        "operationId" : "tagcreate",
        "tags" : [ "Tag" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "type" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "tag" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  }
                }
              },
              "example" : {
                "type" : "general",
                "tag" : "testtag"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfull create",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "type", "tag" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "tag" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Tag/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Tag/{id}" : {
      "get" : {
        "description" : "Tags represent estatespace platform tags. This route returns a specific tag",
        "operationId" : "taggetbyid",
        "tags" : [ "Tag" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Tag/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Tag/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Tag represent estatespace platform tag. This route updates a specific tag",
        "operationId" : "tagupdatebyid",
        "tags" : [ "Tag" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Tag/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Tag/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Tags represent estatespace platform tags. This route deletes a specific tag",
        "operationId" : "tagdeletebyid",
        "tags" : [ "Tag" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "in" : "path",
          "name" : "id",
          "schema" : {
            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
          },
          "description" : "The id of the specific resource to take action against",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Tag/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Tag microservice.",
        "operationId" : "taghealth",
        "tags" : [ "Tag" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Preference" : {
      "get" : {
        "description" : "Preference represent estatespace platform preferences. This route returns all preferences currently on estatespace platform.",
        "operationId" : "preferencegetall",
        "tags" : [ "Preference" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "in" : "query",
          "name" : "user",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The user to search for. This is either a string representing the user [firstname%20lastname] or a uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to a user."
        }, {
          "in" : "query",
          "name" : "tag",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The tag to search for. This is either a string representing the tag text or a uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to a tag."
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "user.username",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The username to search for. This is a string representing the username of user."
        }, {
          "in" : "query",
          "name" : "user.id",
          "schema" : {
            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
          },
          "description" : "The id to search for. This is a string representing the id of user."
        }, {
          "in" : "query",
          "name" : "user.name",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The name to search for. This is a string representing the name of user."
        }, {
          "in" : "query",
          "name" : "user.active",
          "schema" : {
            "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
          },
          "description" : "The active to search for. This is a boolean value representing the status of user as active or not active."
        }, {
          "in" : "query",
          "name" : "role",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The role to search for. This is a string representing the role in which the user has entered the preference."
        }, {
          "in" : "query",
          "name" : "category",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The category to search for. This is a string representing the category of preference."
        }, {
          "in" : "query",
          "name" : "stance",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The stance to search for. This is a string representing whether the user has a positive or negative disposition toward the item or concept."
        }, {
          "in" : "query",
          "name" : "degree",
          "schema" : {
            "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
          },
          "description" : "The degree to search for. This is a string representing the extent to which the user likes or dislikes the item or concept."
        }, {
          "in" : "query",
          "name" : "notes",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The notes to search for. This is a string representing explanatory text about preference."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "user", "name", "category", "stance" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "user" : {
                            "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                          },
                          "role" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
                          },
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "category" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "stance" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "degree" : {
                            "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                          },
                          "notes" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Preference/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Preference represent estatespace platform preference. This route creates a preference",
        "operationId" : "preferencecreate",
        "tags" : [ "Preference" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "owner" : {
                    "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                  },
                  "role" : {
                    "description" : "A globally unique identifier that shall conform to [RFC 3986](https://tools.ietf.org/html/rfc3986).",
                    "type" : "string"
                  },
                  "name" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "category" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "stance" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "degree" : {
                    "description" : "Rational numbers (i.e., numbers with a fractional component) that are represented in decimal format.",
                    "type" : "number",
                    "format" : "double"
                  },
                  "notes" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  }
                }
              },
              "example" : {
                "owner" : "User/32cde682-e1c7-4d5a-b913-95ff96d8d9d3",
                "role" : "Role/1a97f029-a53b-47c5-8bb7-460465055731",
                "name" : "testPref",
                "category" : "Other",
                "stance" : "Like",
                "degree" : 1,
                "notes" : "test note"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a role",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "user", "name", "category", "stance" ],
                  "properties" : {
                    "id" : {
                      "description" : "Any combination of upper case or lower case alphanumeric charaters or specials chararaters. Can include ASCII letters (A-Z or a-z), numerals (0-9), dashes (-) or periods (.). Has a length limit of 64 characters. Can be an integer, an un-prefixed Object Identifier (OID), globally/universally unique identifier (UUID/GUID; RFC [4122](https://tools.ietf.org/html/rfc4122)), or any other identifier pattern that meets these constraints. regex: ^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type" : "string",
                      "format" : "uuid"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "type" : "object",
                      "required" : [ "lastUpdated", "version" ],
                      "properties" : {
                        "lastUpdated" : {
                          "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                        },
                        "version" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      }
                    },
                    "user" : {
                      "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                    },
                    "role" : {
                      "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/assignedRole"
                    },
                    "name" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "category" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "stance" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "degree" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "notes" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Preference/{id}" : {
      "get" : {
        "description" : "Preference represent estatespace platform preference. This route returns a specific preference",
        "operationId" : "preferencegetbyid",
        "tags" : [ "Preference" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Preference represent estatespace platform preference. This route updates a specific preference",
        "operationId" : "preferenceupdatebyid",
        "tags" : [ "Preference" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Preference represent estatespace platform preference. This route deletes a specific preference",
        "operationId" : "preferencedeletebyid",
        "tags" : [ "Preference" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Preference/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Preference microservice.",
        "operationId" : "preferencehealth",
        "tags" : [ "Preference" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/File" : {
      "get" : {
        "description" : "File represent estatespace platform file. This route returns all files currently on estatespace platform.",
        "operationId" : "filegetall",
        "tags" : [ "File" ],
        "parameters" : [ {
          "in" : "header",
          "description" : "An optional header to correlate client requests with server responses.",
          "name" : "x-request-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "716a79c7-d014-4e03-8ebf-75b3d85e351a"
          }
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "in" : "query",
          "name" : "dataUse",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The datause type. Typically test or production."
        }, {
          "in" : "query",
          "name" : "text",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The text to search for within the resource"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
          },
          "description" : "The max search results per page."
        }, {
          "in" : "query",
          "name" : "metadata.createdBy",
          "schema" : {
            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
          },
          "description" : "The createdBy to search for. This is a string representing the user who created the file."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "relation" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "url" : {
                            "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                          }
                        }
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "name", "size", "contentType" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/name"
                          },
                          "size" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/size"
                          },
                          "contentType" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/name"
                          },
                          "contentsUrl" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/contentsUrl"
                          },
                          "hash" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/name"
                          },
                          "tags" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                            }
                          },
                          "metatags" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metatags"
                          },
                          "thumbnail" : {
                            "$ref" : "#/paths/~1File/post/requestBody/content/application~1json/schema/properties/data"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "File represent estatespace platform file. This route creates a file",
        "operationId" : "filecreate",
        "tags" : [ "File" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                    }
                  },
                  "size" : {
                    "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                  },
                  "hash" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "data" : {
                    "description" : "A variable-width binary string (i.e., stream of bytes) that is base64 encoded [RFC 4648](https://tools.ietf.org/html/rfc4648), regex: ^@[a-zA-Z0-9+/]+={0,2}$",
                    "type" : "string"
                  }
                }
              },
              "example" : {
                "name" : "example.pdf",
                "size" : 11810,
                "hash" : "6c8774bc6ad3f0005f8018f865dc48a6",
                "data" : "data:application/pdf;base64,"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfull create",
            "headers" : {
              "x-request-id" : {
                "description" : "An optional header to correlate client requests with server responses.",
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "716a79c7-d014-4e03-8ebf-75b3d85e351a"
                }
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "name", "size", "contentType" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "description" : "A variable-length sequence of unicode characters. Max string limit should not exceed 1 MB. Any valid Unicode characters above decimal 31. Can include u0009 (horizontal tab), u0010 (line feed), and u0013 (carriage return)",
                      "type" : "string"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "name" : { },
                    "size" : { },
                    "contentType" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/name"
                    },
                    "contentsUrl" : { },
                    "hash" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/name"
                    },
                    "tags" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                      }
                    },
                    "metatags" : {
                      "type" : "object",
                      "required" : [ "position", "properties" ],
                      "properties" : {
                        "position" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Namedlocation/post/requestBody/content/application~1json/schema/properties/position"
                          }
                        },
                        "properties" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "key" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "value" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "type" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "valuetype" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              }
                            }
                          }
                        }
                      }
                    },
                    "thumbnail" : {
                      "$ref" : "#/paths/~1File/post/requestBody/content/application~1json/schema/properties/data"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized access",
            "headers" : {
              "x-request-id" : {
                "description" : "An optional header to correlate client requests with server responses.",
                "schema" : {
                  "type" : "string",
                  "format" : "uuid",
                  "example" : "716a79c7-d014-4e03-8ebf-75b3d85e351a"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              }
            }
          },
          "404" : {
            "description" : "The requested endpoint could not be found",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/401/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              }
            }
          },
          "412" : {
            "description" : "The request failed to meet a precondition of the request",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/401/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              }
            }
          },
          "413" : {
            "description" : "The resource cannot be handled by the server, such as a file being too large to process",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/401/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              }
            }
          },
          "422" : {
            "description" : "The request resource violates business rules",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/401/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "issues" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "issues" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema/properties/issues/items"
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              }
            }
          },
          "default" : {
            "description" : "Unknown or unexpected error",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/401/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              }
            }
          }
        }
      }
    },
    "/File/{id}" : {
      "get" : {
        "description" : "File represent estatespace platform file. This route returns a specific file",
        "operationId" : "filegetbyid",
        "tags" : [ "File" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "description" : "The requested resource could not be found because it was deleted",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/401/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              }
            }
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "File represent estatespace platform file. This route updates a specific file",
        "operationId" : "fileupdatebyid",
        "tags" : [ "File" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "description" : "BSEE Specification patch payload",
                "required" : [ "metadata", "patch" ],
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                  },
                  "patch" : {
                    "type" : "array",
                    "items" : {
                      "description" : "A JSONPatch document as defined by [RFC 6902](https://tools.ietf.org/html/rfc6902)",
                      "required" : [ "op", "path" ],
                      "properties" : {
                        "op" : {
                          "type" : "string",
                          "description" : "The operation to be performed",
                          "enum" : [ "add", "remove", "replace", "move", "copy", "test" ]
                        },
                        "path" : {
                          "type" : "string",
                          "description" : "A JSON-Pointer"
                        },
                        "value" : {
                          "type" : "object",
                          "description" : "The value to be used within the operations."
                        },
                        "from" : {
                          "type" : "string",
                          "description" : "A string containing a JSON Pointer value."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "File represent estatespace platform file. This route deletes a specific file",
        "operationId" : "filedeletebyid",
        "tags" : [ "File" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "description" : "The resource version specified could not be updated. Most likely because it is too old (based on lastModified date)",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/401/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                }
              }
            }
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/File/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the File microservice.",
        "operationId" : "filehealth",
        "tags" : [ "File" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "uptime" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/degree"
                        },
                        "code" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "unit" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      }
                    },
                    "usercpu" : {
                      "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema/properties/uptime"
                    },
                    "systemcpu" : {
                      "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema/properties/uptime"
                    },
                    "memory" : {
                      "type" : "object",
                      "properties" : {
                        "rss" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        },
                        "heapTotal" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        },
                        "heapUsed" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        },
                        "external" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        }
                      }
                    },
                    "nodeVersion" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "services" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "endpoint" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    },
                    "gravity" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "version" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Setting" : {
      "get" : {
        "description" : "Setting represent estatespace platform setting. This route returns all settings currently on estatespace platform.",
        "operationId" : "settinggetall",
        "tags" : [ "Setting" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "in" : "query",
          "name" : "id",
          "schema" : {
            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
          },
          "description" : "The id to search for."
        }, {
          "in" : "query",
          "name" : "lastUpdated",
          "schema" : {
            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
          },
          "description" : "The datetime to search for. May be prepended with operators [gt, gte, lt, lte] and may be comma separated where the first datetime is the start date and the second is the end date."
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "application",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The application to search for. This is a string value representing the application that imports the setting."
        }, {
          "in" : "query",
          "name" : "category",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The category to search for. This is a string value representing the category of the setting."
        }, {
          "in" : "query",
          "name" : "name",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The name to search for. This is a string representing the name of the setting."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "description" : "Integer based numbers (64 bits), no decimals",
                      "type" : "number",
                      "format" : "integer"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "application", "category", "name", "inputType" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "application" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "category" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "user" : {
                            "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                          },
                          "inputType" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "valueString" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "valueInteger" : {
                            "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                          },
                          "valueDecimal" : {
                            "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/degree"
                          },
                          "valueDate" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "unit" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Setting represent estatespace platform setting. This route creates a setting",
        "operationId" : "settingcreate",
        "tags" : [ "Setting" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "application" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "description" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "category" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "name" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "user" : {
                    "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                  },
                  "inputType" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "valueString" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  }
                }
              },
              "example" : {
                "application" : "Vault",
                "description" : "test setting",
                "category" : "Security",
                "name" : "Encryption Algorithm",
                "user" : "0a9dc2e7-068d-4abf-84aa-6388e1d70a59",
                "inputType" : "string",
                "valueString" : "RSA-4096"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfull create",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "description" : "The location of the created resource",
                "schema" : {
                  "type" : "string",
                  "format" : "URL",
                  "example" : "https://demo.griffindigitalidentityprotection.com/api/v1/{Resource}/{UUIDv4}"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "application", "category", "name", "inputType" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "application" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "category" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "name" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "user" : {
                      "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                    },
                    "inputType" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "valueString" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "valueInteger" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "valueDecimal" : {
                      "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/degree"
                    },
                    "valueDate" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "unit" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Setting/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Setting/{id}" : {
      "get" : {
        "description" : "Setting represent estatespace platform setting. This route returns a specific setting",
        "operationId" : "settinggetbyid",
        "tags" : [ "Setting" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Setting/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Setting/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Setting represent estatespace platform setting. This route updates a specific setting",
        "operationId" : "settingupdatebyid",
        "tags" : [ "Setting" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Setting/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Setting/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Setting represent estatespace platform setting. This route deletes a specific setting",
        "operationId" : "settingdeletebyid",
        "tags" : [ "Setting" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Setting/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Setting microservice.",
        "operationId" : "settinghealth",
        "tags" : [ "Setting" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Note" : {
      "get" : {
        "description" : "Note represent estatespace platform note. This route returns all notes currently on estatespace platform.",
        "operationId" : "notegetall",
        "tags" : [ "Note" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "title",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The title to search for. This is a string representing the title of note."
        }, {
          "in" : "query",
          "name" : "owner",
          "schema" : {
            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
          },
          "description" : "The owner to search for. This is a string value representing the owner of note."
        }, {
          "in" : "query",
          "name" : "functionalArea",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The functionalArea to search for. This is a string (enum) value representing the functionalArea of a note."
        }, {
          "in" : "query",
          "name" : "relationships.parent",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The parent resource to search for, may be comma separated"
        }, {
          "in" : "query",
          "name" : "relationships.children",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The children resources to search for, may be comma separated"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "title", "text", "functionalArea" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "title" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "text" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "owner" : {
                            "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                          },
                          "documents" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                          },
                          "tags" : {
                            "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                          },
                          "functionalArea" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "relationships" : {
                            "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/relationships/items"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Note/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Note represent estatespace platform note. This route creates a note",
        "operationId" : "notecreate",
        "tags" : [ "Note" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "title" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "owner" : {
                    "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                  },
                  "text" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "documents" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "filename" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "description" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      }
                    }
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  },
                  "functionalArea" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "relationships" : {
                    "type" : "object",
                    "properties" : {
                      "parent" : {
                        "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                      },
                      "children" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                        }
                      }
                    }
                  }
                }
              },
              "example" : {
                "title" : "A test note",
                "owner" : "User/90c864b5-23b1-4e46-9fa1-33b60905936f",
                "text" : "test text",
                "functionalArea" : "Receiving"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a note",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "title", "text", "functionalArea" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "title" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "text" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "owner" : {
                      "$ref" : "#/paths/~1Activity/get/parameters/8/schema"
                    },
                    "documents" : {
                      "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                    },
                    "tags" : {
                      "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Tag resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                      "type" : "string",
                      "format" : "URL"
                    },
                    "functionalArea" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "relationships" : {
                      "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/relationships/items"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Note/{id}" : {
      "get" : {
        "description" : "Note represent estatespace platform note. This route returns a specific note",
        "operationId" : "notegetbyid",
        "tags" : [ "Note" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Note represent estatespace platform note. This route updates a specific note",
        "operationId" : "noteupdatebyid",
        "tags" : [ "Note" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Note represent estatespace platform note. This route deletes a specific note",
        "operationId" : "notedeletebyid",
        "tags" : [ "Note" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Note/{id}/$htmltomarkdown" : {
      "patch" : {
        "description" : "Note represent estatespace platform note. This route updates a note text field using html representing markdown.",
        "operationId" : "noteupdatebyidwop",
        "tags" : [ "Note" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "description" : "BSEE Specification patch payload used with operation",
                "required" : [ "metadata", "patch", "parameters" ],
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                  },
                  "patch" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema/properties/patch/items"
                    }
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "name", "valueString" ],
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "valueString" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "resource" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      }
                    }
                  }
                }
              },
              "example" : {
                "metadata" : {
                  "lastUpdated" : "2100-07-02T18:14:03.143Z"
                },
                "parameters" : [ {
                  "name" : "string",
                  "valueString" : "<h1>Abide</h1><div>Wedge</div><div><ol><li>Add</li><li>We'd</li><li>Add</li></ol><div><ul><li>Add</li><li>We'd</li><li>We'd</li></ul><h2>Wowo<span style=\"font-weight: normal;\">wowo</span>wow</h2></div></div><div>Wow<i>oww</i>owo</div><div>Sass</div><div>Add</div><div><br></div>"
                } ],
                "patch" : [ ]
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1Note~1%7Bid%7D~1%24htmltomarkdown/patch/requestBody/content/application~1json/schema"
              },
              "example" : {
                "metadata" : {
                  "lastUpdated" : "2100-07-02T18:14:03.143Z"
                },
                "parameters" : [ {
                  "name" : "string",
                  "valueString" : "<h1>Abide</h1><div>Wedge</div><div><ol><li>Add</li><li>We'd</li><li>Add</li></ol><div><ul><li>Add</li><li>We'd</li><li>We'd</li></ul><h2>Wowo<span style=\"font-weight: normal;\">wowo</span>wow</h2></div></div><div>Wow<i>oww</i>owo</div><div>Sass</div><div>Add</div><div><br></div>"
                } ],
                "patch" : [ ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated a note",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Note/$htmltomarkdown" : {
      "post" : {
        "description" : "Note represent estatespace platform note. This route creates a note using html representing markdown.",
        "operationId" : "notecreatewop",
        "tags" : [ "Note" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  },
                  "title" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "owner" : {
                    "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                  },
                  "text" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "documents" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "filename" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "description" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      }
                    }
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  },
                  "functionalArea" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "relationships" : {
                    "type" : "object",
                    "properties" : {
                      "parent" : {
                        "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                      },
                      "children" : {
                        "type" : "array",
                        "items" : {
                          "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                        }
                      }
                    }
                  },
                  "op" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  }
                }
              },
              "example" : {
                "parameters" : [ {
                  "name" : "string",
                  "valueString" : "<h1>Abide</h1><div>Wedge</div><div><ol><li>Add</li><li>We'd</li><li>Add</li></ol><div><ul><li>Add</li><li>We'd</li><li>We'd</li></ul><h2>Wowo<span style=\"font-weight: normal;\">wowo</span>wow</h2></div></div><div>Wow<i>oww</i>owo</div><div>Sass</div><div>Add</div><div><br></div>"
                } ],
                "title" : "A test note",
                "owner" : "User/90c864b5-23b1-4e46-9fa1-33b60905936f",
                "text" : "",
                "functionalArea" : "Receiving"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a note",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Note/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Note microservice.",
        "operationId" : "notehealth",
        "tags" : [ "Note" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Contact" : {
      "get" : {
        "description" : "Contact represent estatespace platform contact. This route returns all contacts currently on estatespace platform.",
        "operationId" : "contactgetall",
        "tags" : [ "Contact" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "name",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The name to search for. This is a string value representing the name of contact."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "name", "contactType" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "title" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "name" : {
                            "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema/properties/name"
                          },
                          "contactType" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "birthday" : {
                            "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/birthday"
                          },
                          "organization" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/organization/items"
                            }
                          },
                          "address" : {
                            "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/address"
                          },
                          "contactPoint" : {
                            "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/contactPoint"
                          },
                          "notes" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "gender" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "socialMediaIdentifier" : {
                            "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/socialMediaIdentifier"
                          },
                          "profilePicture" : {
                            "$ref" : "#/paths/~1File/post/requestBody/content/application~1json/schema/properties/data"
                          },
                          "tags" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Contact/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Contact represent estatespace platform contact. This route creates a contact",
        "operationId" : "contactcreate",
        "tags" : [ "Contact" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "dataUse" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "contactType" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "name" : {
                    "type" : "object",
                    "properties" : {
                      "firstName" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "lastName" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "rank" : {
                        "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                      }
                    }
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  },
                  "organization" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  },
                  "address" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "use" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "postal" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "city" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "state" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "zipCode" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "country" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "rank" : {
                        "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                      }
                    }
                  },
                  "socialMediaIdentifier" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "socialMediaType" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "identifier" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "rank" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        }
                      }
                    }
                  },
                  "profilePicture" : {
                    "$ref" : "#/paths/~1File/post/requestBody/content/application~1json/schema/properties/data"
                  }
                }
              },
              "example" : {
                "name" : {
                  "firstName" : "Tester",
                  "lastName" : "Tester",
                  "rank" : 1
                },
                "contactType" : "Staff"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a role",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "name", "contactType" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "title" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "name" : {
                      "$ref" : "#/paths/~1User/post/responses/201/content/application~1json/schema/properties/name"
                    },
                    "contactType" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "birthday" : {
                      "description" : "Valid dates are \"0001-01-01\" through \"9999-12-31\". regex: \\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$ ref: [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)",
                      "type" : "string",
                      "format" : "date"
                    },
                    "organization" : {
                      "type" : "array",
                      "items" : {
                        "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Organization resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
                        "type" : "string",
                        "format" : "URL"
                      }
                    },
                    "address" : {
                      "type" : "object",
                      "required" : [ "type", "use", "postal" ],
                      "properties" : {
                        "type" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "use" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "postal" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "city" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "district" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "state" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "zipCode" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "country" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "rank" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        }
                      }
                    },
                    "contactPoint" : {
                      "type" : "object",
                      "required" : [ "system", "use", "value" ],
                      "properties" : {
                        "system" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "use" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "value" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "rank" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        }
                      }
                    },
                    "notes" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "gender" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "socialMediaIdentifier" : {
                      "type" : "object",
                      "required" : [ "socialMediaType", "identifier" ],
                      "properties" : {
                        "socialMediaType" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "identifier" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "rank" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        }
                      }
                    },
                    "profilePicture" : {
                      "$ref" : "#/paths/~1File/post/requestBody/content/application~1json/schema/properties/data"
                    },
                    "tags" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Contact/{id}" : {
      "get" : {
        "description" : "Contact represent estatespace platform contact. This route returns a specific contact",
        "operationId" : "contactgetbyid",
        "tags" : [ "Contact" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Contact represent estatespace platform contact. This route updates a specific contact",
        "operationId" : "contactupdatebyid",
        "tags" : [ "Contact" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Contact represent estatespace platform contact. This route deletes a specific contact",
        "operationId" : "contactdeletebyid",
        "tags" : [ "Contact" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Contact/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Contact microservice.",
        "operationId" : "contacthealth",
        "tags" : [ "Contact" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Notificationstatus" : {
      "get" : {
        "description" : "Notification status obtains the state of notifications for a specified user",
        "operationId" : "notificationstatusgetall",
        "tags" : [ "Notificationstatus" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "in" : "query",
          "name" : "status",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The status of notifcations to search for"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Notificationstatus/$unread" : {
      "post" : {
        "description" : "Unread marks notifications as unread for a specific user",
        "operationId" : "notificationstatuspostunread",
        "tags" : [ "Notificationstatus" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "valueArrayid" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully marks a message as unread",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Notificationstatus/$read" : {
      "post" : {
        "description" : "Read marks notifications as read for a specific user",
        "operationId" : "notificationstatuspostread",
        "tags" : [ "Notificationstatus" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1Notificationstatus~1%24unread/post/requestBody/content/application~1json/schema"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully marks a message as read",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Notificationstatus/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Notificationstatus microservice.",
        "operationId" : "notificationstatushealth",
        "tags" : [ "Notificationstatus" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Organization" : {
      "get" : {
        "description" : "Obtain all organizations the user has access to",
        "operationId" : "organizationgetall",
        "tags" : [ "Organization" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search in organizations",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "pages" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "object",
                      "properties" : {
                        "first" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "self" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "last" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "name" ],
                        "properties" : {
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "tags" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                            }
                          },
                          "aliases" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            }
                          },
                          "address" : {
                            "type" : "object",
                            "properties" : {
                              "type" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "use" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "postal" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "city" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "district" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "state" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "zipCode" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "country" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "rank" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Organization/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Creates an organization",
        "operationId" : "orgcreate",
        "tags" : [ "Organization" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                    }
                  },
                  "aliases" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  },
                  "address" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "use" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "postal" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "city" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "district" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "state" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "zipCode" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "country" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "rank" : {
                        "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                      }
                    }
                  }
                }
              },
              "example" : {
                "name" : "test org",
                "address" : {
                  "type" : "Postal",
                  "use" : "Home",
                  "postal" : "123 test st"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful creates an Organization",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "name" ],
                  "properties" : {
                    "name" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "tags" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                      }
                    },
                    "aliases" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    },
                    "address" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "use" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "postal" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "city" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "district" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "state" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "zipCode" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "country" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "rank" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Organization/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Organization/{id}" : {
      "get" : {
        "description" : "This route returns a specific Organization.",
        "operationId" : "organizationgetbyid",
        "tags" : [ "Organization" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Organization/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Organization/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "This route updates a specific Organization",
        "operationId" : "organizationupdatebyid",
        "tags" : [ "Organization" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Organization/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Organization/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "This route deletes a specific organization",
        "operationId" : "organizationdeletebyid",
        "tags" : [ "Organization" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Organization/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Organization microservice.",
        "operationId" : "organizationhealth",
        "tags" : [ "Organization" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Search" : {
      "get" : {
        "description" : "This route returns results from several microservices for a given search.",
        "operationId" : "search",
        "tags" : [ "Search" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/4"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                      },
                      "type" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "resource" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "page" : {
                        "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                      },
                      "pages" : {
                        "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                      },
                      "limit" : {
                        "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                      },
                      "total" : {
                        "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                      },
                      "links" : {
                        "type" : "object",
                        "properties" : {
                          "first" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "self" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "last" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      },
                      "entries" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Search/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Search/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Search microservice.",
        "operationId" : "searchhealth",
        "tags" : [ "Search" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Signup/$isdomainavailable" : {
      "get" : {
        "description" : "Signup route is used to sign up a user to estatespace. This route checks if the domain is available or not.",
        "operationId" : "signUpisoperationavailable",
        "tags" : [ "Signup" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "in" : "query",
          "name" : "domain",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The domain to search for. This is either a string representing the domain."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation outcome for both available and unavailable domains",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "isDomainAvailable" : {
                      "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                    },
                    "message" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Signup~1%24isdomainavailable/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Signup/$isvalidcoupon" : {
      "get" : {
        "description" : "Signup route is used to sign up a user to estatespace. This route checks if the coupon used for signup is valid or not",
        "operationId" : "signUpisvalidcoupon",
        "tags" : [ "Signup" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "in" : "query",
          "name" : "couponId",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The couponId to validate. This is a string representing the couponId."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response for both valid and invalid coupons",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "isValid" : {
                      "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Signup~1%24isvalidcoupon/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Signup/$calculatesubscriptiontotal" : {
      "get" : {
        "description" : "Signup route is used to sign up a user to estatespace. This route returns the itemized subscription charges based on coupons and user count provided",
        "operationId" : "signUpcalculatesubscriptiontotal",
        "tags" : [ "Signup" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Signup~1%24isvalidcoupon/get/parameters/1"
        }, {
          "in" : "query",
          "name" : "minUserCount",
          "schema" : {
            "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
          },
          "description" : "The minimum user count for a subscription. This is a string representing the minimum user count."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response containing line items for total subscription charges",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "parameters" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "resource" : {
                            "type" : "object",
                            "properties" : {
                              "metadata" : {
                                "type" : "object",
                                "properties" : {
                                  "lastUpdated" : {
                                    "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                                  },
                                  "version" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  }
                                }
                              },
                              "planCost" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              },
                              "userCount" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              },
                              "repetitionInterval" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "repetitionCount" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              },
                              "couponName" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "couponDiscount" : {
                                "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/degree"
                              },
                              "couponDescription" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "repeatingCost" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              },
                              "repeatingCostDescription" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Signup~1%24calculatesubscriptiontotal/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Signup/$getstripepublickey" : {
      "get" : {
        "description" : "Signup route is used to sign up a user to estatespace. This route returns the strip public key required for payment.",
        "operationId" : "signUpgetstripepublickey",
        "tags" : [ "Signup" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation outcome with stripe public key",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "stripePublishableKey" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Signup~1%24getstripepublickey/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Signup/$addclient" : {
      "post" : {
        "description" : "Signup route is used to sign up a user to estatespace. It is an internal call from the SignUp Front end that first takes in payment information and generates a StripSource which is then passed along with additional fields to this route.",
        "operationId" : "signUpaddclient",
        "tags" : [ "Signup" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "domain", "fullname", "email", "phone", "stripeSource", "terms", "minUserCount" ],
                "properties" : {
                  "domain" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "fullname" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "email" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "phone" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "company" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "minUserCount" : {
                    "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                  },
                  "couponId" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "stripeSource" : {
                    "type" : "object",
                    "required" : [ "id" ],
                    "properties" : {
                      "id" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "terms" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "link" : {
                          "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                        },
                        "agree" : {
                          "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully created a client",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Credentialmanager/$forgotpassword" : {
      "get" : {
        "description" : "Credentialmanager route is used to create or update a user's credentials. This route is called from the SignUp or Core's Front end.",
        "operationId" : "credentialmanagerforgotpassword",
        "tags" : [ "Credentialmanager" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "in" : "query",
          "name" : "domain",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The domain to search for. This is a string representing the domain."
        }, {
          "in" : "query",
          "name" : "email",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The email to search for. This is a string representing the email."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully sent a reset password email to the user",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Credentialmanager/{id}/$setpassword" : {
      "post" : {
        "description" : "Credentialmanager route is used to create or update a user's credentials. This route is embedded in the reset password link that is snet to a user's email when creating or updating password.",
        "operationId" : "credentialmanagersetpassword",
        "tags" : [ "Credentialmanager" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "Parameters payload that includes email and password",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "description" : "This resource specifies the parameters to be passed using a non get HTTP action",
                "required" : [ "resource", "parameters" ],
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Note~1%7Bid%7D~1%24htmltomarkdown/patch/requestBody/content/application~1json/schema/properties/parameters/items"
                    }
                  }
                }
              },
              "example" : {
                "resource" : "Parameters",
                "parameters" : [ {
                  "name" : "password",
                  "valueString" : "validPasswordString"
                }, {
                  "name" : "email",
                  "valueString" : "validEmailString"
                } ]
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1Credentialmanager~1%7Bid%7D~1%24setpassword/post/requestBody/content/application~1json/schema"
              },
              "example" : {
                "resource" : "Parameters",
                "parameters" : [ {
                  "name" : "password",
                  "valueString" : "validPasswordString"
                }, {
                  "name" : "email",
                  "valueString" : "validEmailString"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the password",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Consumable" : {
      "get" : {
        "description" : "Consumable represent estatespace platform consumable. This route returns all consumables currently on estatespace platform.",
        "operationId" : "consumablegetall",
        "tags" : [ "Consumable" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "name",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The name to search for. This is a string value representing the name of consumable."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "name" ],
                        "properties" : {
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "description" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "category" : {
                            "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                          },
                          "department" : {
                            "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                          },
                          "product" : {
                            "type" : "object",
                            "properties" : {
                              "model" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "description" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              }
                            }
                          },
                          "manufacturer" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "manuals" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "type" : {
                                  "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                                },
                                "reference" : {
                                  "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                                },
                                "hardCopyOnSite" : {
                                  "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                                }
                              }
                            }
                          },
                          "files" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                            }
                          },
                          "tags" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                            }
                          },
                          "relationships" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/relationships/items"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Consumable/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Consumable represent estatespace platform consumable. This route creates a consumable",
        "operationId" : "consumablecreate",
        "tags" : [ "Consumable" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "dataUse" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "name" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "description" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                    }
                  },
                  "files" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                    }
                  },
                  "category" : {
                    "description" : "A data type that has a code and a system element that identifies where the definition of the code comes from",
                    "type" : "object",
                    "required" : [ "system", "code", "version", "display" ],
                    "properties" : {
                      "system" : {
                        "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                      },
                      "version" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "code" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "display" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "definition" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "product" : {
                    "type" : "object",
                    "properties" : {
                      "model" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      },
                      "description" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "manufacturer" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "manuals" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                        },
                        "reference" : {
                          "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates an consumable",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "name" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "name" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "description" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "category" : {
                      "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                    },
                    "department" : {
                      "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                    },
                    "product" : {
                      "type" : "object",
                      "properties" : {
                        "model" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "description" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        }
                      }
                    },
                    "manufacturer" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "manuals" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                          },
                          "hardCopyOnSite" : {
                            "$ref" : "#/paths/~1User~1%24bulkcreate/post/requestBody/content/application~1json/schema/properties/parameters/items/properties/resource/properties/entries/items/properties/metadata/properties/dataUse"
                          }
                        }
                      }
                    },
                    "files" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/files/items"
                      }
                    },
                    "tags" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Note/post/responses/201/content/application~1json/schema/properties/tags"
                      }
                    },
                    "relationships" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Sop/post/requestBody/content/application~1json/schema/properties/relationships/items"
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Consumable/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Consumable/{id}" : {
      "get" : {
        "description" : "Consumable represent estatespace platform consumable. This route returns a specific consumable",
        "operationId" : "consumablegetbyid",
        "tags" : [ "Consumable" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Consumable/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Consumable/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Consumable represent estatespace platform consumable. This route updates a specific consumable",
        "operationId" : "consumableupdatebyid",
        "tags" : [ "Consumable" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Consumable/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Consumable/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Consumable represent estatespace platform consumable. This route deletes a specific consumable",
        "operationId" : "consumabledeletebyid",
        "tags" : [ "Consumable" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Consumable/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Consumable microservice.",
        "operationId" : "consumablehealth",
        "tags" : [ "Consumable" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Namedlocation" : {
      "get" : {
        "description" : "Namedlocation represent estatespace platform namedlocation. This route returns all namedlocations currently on estatespace platform.",
        "operationId" : "namedlocationgetall",
        "tags" : [ "Namedlocation" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/5"
        }, {
          "$ref" : "#/paths/~1Preference/get/parameters/6"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "title",
          "schema" : {
            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
          },
          "description" : "The title to search for. This is a string value representing the title of location."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "name" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "title" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "roomType" : {
                            "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                          },
                          "sops" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/sop"
                            }
                          },
                          "address" : {
                            "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/address"
                          },
                          "position" : {
                            "$ref" : "#/paths/~1Namedlocation/post/requestBody/content/application~1json/schema/properties/position"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Namedlocation/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "NamedLocation represent estatespace platform namedlocation. This route creates a namedlocation",
        "operationId" : "namedlocationcreate",
        "tags" : [ "Namedlocation" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "dataUse" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "title" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "roomType" : {
                    "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                  },
                  "sops" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/sop"
                    }
                  },
                  "address" : {
                    "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/address"
                  },
                  "position" : {
                    "type" : "object",
                    "required" : [ "latitude", "longitude", "altitude" ],
                    "properties" : {
                      "latitude" : {
                        "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/degree"
                      },
                      "longitude" : {
                        "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/degree"
                      },
                      "altitude" : {
                        "type" : "object",
                        "properties" : {
                          "value" : {
                            "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/degree"
                          },
                          "unit" : {
                            "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example" : {
                "title" : "Bedroom"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a namedlocation",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "name" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "title" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "roomType" : {
                      "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                    },
                    "sops" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/sop"
                      }
                    },
                    "address" : {
                      "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/address"
                    },
                    "position" : {
                      "$ref" : "#/paths/~1Namedlocation/post/requestBody/content/application~1json/schema/properties/position"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Namedlocation/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Namedlocation/{id}" : {
      "get" : {
        "description" : "Namedlocation represent estatespace platform namedlocation. This route returns a specific namedlocation",
        "operationId" : "namedlocationgetbyid",
        "tags" : [ "Namedlocation" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Namedlocation/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Namedlocation/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Namedlocation represent estatespace platform namedlocation. This route updates a specific namedlocation",
        "operationId" : "namedlocationupdatebyid",
        "tags" : [ "Namedlocation" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Namedlocation/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Namedlocation/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "NamedLocation represent estatespace platform namedlocation. This route deletes a specific namedlocation",
        "operationId" : "namedlocationdeletebyid",
        "tags" : [ "Namedlocation" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Namedlocation/$bulkcreate" : {
      "post" : {
        "description" : "Namedlocations represent estatespace platform namedlocationa. This route create bulk Namedlocations",
        "operationId" : "namedlocationbulkcreate",
        "tags" : [ "Namedlocation" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "parameters" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "resource" : {
                          "type" : "object",
                          "properties" : {
                            "metadata" : {
                              "type" : "object",
                              "properties" : {
                                "lastmodified" : {
                                  "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                                },
                                "version" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                }
                              }
                            },
                            "resource" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "type" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "total" : {
                              "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                            },
                            "entries" : {
                              "type" : "array",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "metadata" : {
                                    "type" : "object",
                                    "properties" : {
                                      "dataUse" : {
                                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                      }
                                    }
                                  },
                                  "title" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "roomType" : {
                                    "$ref" : "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/category"
                                  },
                                  "sops" : {
                                    "type" : "array",
                                    "items" : {
                                      "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/sop"
                                    }
                                  },
                                  "address" : {
                                    "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/address"
                                  },
                                  "position" : {
                                    "$ref" : "#/paths/~1Namedlocation/post/requestBody/content/application~1json/schema/properties/position"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates atleast one role",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "parameters" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "parameters" : {
                      "type" : "object",
                      "required" : [ "returnBundle", "errorBundle" ],
                      "properties" : {
                        "returnBundle" : {
                          "type" : "object",
                          "required" : [ "name", "resource" ],
                          "properties" : {
                            "name" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                              "enum" : "return"
                            },
                            "resource" : {
                              "type" : "object",
                              "properties" : {
                                "metadata" : {
                                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                                },
                                "resource" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "Bundle"
                                },
                                "type" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "list"
                                },
                                "total" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                },
                                "entries" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/paths/~1Namedlocation/get/responses/200/content/application~1json/schema/properties/entries/items"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errorBundle" : {
                          "type" : "object",
                          "required" : [ "name", "resource" ],
                          "properties" : {
                            "name" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                              "enum" : "errors"
                            },
                            "resource" : {
                              "type" : "object",
                              "properties" : {
                                "metadata" : {
                                  "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                                },
                                "resource" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "Bundle"
                                },
                                "type" : {
                                  "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference",
                                  "enum" : "list"
                                },
                                "total" : {
                                  "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                                },
                                "entries" : {
                                  "type" : "array",
                                  "items" : {
                                    "$ref" : "#/paths/~1File/post/responses/422/content/application~1json/schema"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Namedlocation~1%24bulkcreate/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Namedlocation/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Namedlocation microservice.",
        "operationId" : "namedlocationhealth",
        "tags" : [ "Namedlocation" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Locationhistory" : {
      "get" : {
        "description" : "LocationHistory represent estatespace platform locationhistory. This route returns all locations that an entity was at a specific time.",
        "operationId" : "locationhistorygetall",
        "tags" : [ "Locationhistory" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        }, {
          "in" : "query",
          "name" : "timeStamp",
          "schema" : {
            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
          },
          "description" : "The datetime to search for. May be prepended with operators [gt, gte, lt, lte] and may be comma separated where the first datetime is the start date and the second is the end date."
        }, {
          "in" : "query",
          "name" : "entity",
          "schema" : {
            "description" : "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to any Gravity resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
            "type" : "string",
            "format" : "URL"
          },
          "description" : "The resuource to search for. This is a URI reference to an entity."
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "resource", "metadata", "id", "name" ],
                        "properties" : {
                          "id" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                          },
                          "resource" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "reference" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "metadata" : {
                            "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                          },
                          "timeStamp" : {
                            "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                          },
                          "entity" : {
                            "$ref" : "#/paths/~1Locationhistory/get/parameters/7/schema"
                          },
                          "address" : {
                            "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/address"
                          },
                          "position" : {
                            "$ref" : "#/paths/~1Namedlocation/post/requestBody/content/application~1json/schema/properties/position"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Locationhistory/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "LocationHistory represent estatespace platform location. This route creates a locationHistory",
        "operationId" : "locationhistorycreate",
        "tags" : [ "Locationhistory" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "type" : "object",
                    "properties" : {
                      "dataUse" : {
                        "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                      }
                    }
                  },
                  "timeStamp" : {
                    "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                  },
                  "entity" : {
                    "$ref" : "#/paths/~1Locationhistory/get/parameters/7/schema"
                  },
                  "address" : {
                    "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/address"
                  },
                  "position" : {
                    "$ref" : "#/paths/~1Namedlocation/post/requestBody/content/application~1json/schema/properties/position"
                  }
                }
              },
              "example" : {
                "timeStamp" : "2018-10-01T18:14:03.143Z",
                "entity" : "Resource/31982130-1801-409a-9fdd-746c17e8002f",
                "position" : {
                  "latitude" : "1234.5",
                  "longitude" : "1234.5",
                  "altitude" : {
                    "value" : "1234.5",
                    "unit" : {
                      "system" : "https://uhaul.myestatespaceapps.com/api/Codesystem/measurement",
                      "version" : "1.0",
                      "code" : "M",
                      "display" : "Meter",
                      "definition" : "meter"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a location",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "name" ],
                  "properties" : {
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "timeStamp" : {
                      "$ref" : "#/paths/~1Activity~1%7Bid%7D~1%24setparent/post/responses/200/content/application~1json/schema/properties/end"
                    },
                    "entity" : {
                      "$ref" : "#/paths/~1Locationhistory/get/parameters/7/schema"
                    },
                    "address" : {
                      "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/address"
                    },
                    "position" : {
                      "$ref" : "#/paths/~1Namedlocation/post/requestBody/content/application~1json/schema/properties/position"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Locationhistory/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Locationhistory/{id}" : {
      "get" : {
        "description" : "LocationHistory represent estatespace platform locationhistory. This route returns a specific locationhistory",
        "operationId" : "locationhistorygetbyid",
        "tags" : [ "Locationhistory" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Locationhistory/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Locationhistory/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "LocationHistory represent estatespace platform locationhistory. This route updates a specific locationhistory",
        "operationId" : "locationhistoryupdatebyid",
        "tags" : [ "Locationhistory" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Locationhistory/post/responses/201/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Locationhistory/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "LocationHistory represent estatespace platform locationhistory. This route deletes a specific locationhistory",
        "operationId" : "locationhistorydeletebyid",
        "tags" : [ "Locationhistory" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Tag~1%7Bid%7D/delete/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Locationhistory/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the LocationHistory microservice.",
        "operationId" : "Locationsistoryhealth",
        "tags" : [ "Locationhistory" ],
        "responses" : {
          "200" : {
            "description" : "Successful reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Codesystem" : {
      "get" : {
        "description" : "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses.",
        "operationId" : "codesystemgetall",
        "tags" : [ "Codesystem" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "uri" : {
                            "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                          },
                          "resource" : {
                            "type" : "object",
                            "required" : [ "resource", "metadata", "id", "name", "status" ],
                            "properties" : {
                              "resource" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "reference" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "metadata" : {
                                "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                              },
                              "id" : {
                                "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                              },
                              "version" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "status" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "count" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              },
                              "url" : {
                                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                              },
                              "name" : {
                                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1/schema"
                              },
                              "title" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "publisher" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "contact" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "name" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    },
                                    "telecom" : {
                                      "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/contactPoint"
                                    }
                                  }
                                }
                              },
                              "description" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "purpose" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "copyright" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "concept" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "code" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    },
                                    "display" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    },
                                    "definition" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    }
                                  }
                                }
                              },
                              "valueset" : {
                                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Codesystem/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses.",
        "operationId" : "codesystemcreate",
        "tags" : [ "Codesystem" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a codesystem",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Codesystem/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Codesystem microservice.",
        "operationId" : "codesystemhealth",
        "tags" : [ "Codesystem" ],
        "responses" : {
          "200" : {
            "description" : "Successfully reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Codesystem/{ctsId}" : {
      "get" : {
        "description" : "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses.",
        "operationId" : "codesystemgetbyid",
        "tags" : [ "Codesystem" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "in" : "path",
          "name" : "ctsId",
          "schema" : {
            "description" : "A string to uniquely identify a Codesystem or Valueset. It is a sanitized string consisting of ASCII letters (A-Z or a-z) or dashes (-), starts ands with an alphanumeric, and only single dashes in sequence.",
            "type" : "string"
          },
          "description" : "The name of the specific resource to take action against",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses.",
        "operationId" : "codesystemupdatebyid",
        "tags" : [ "Codesystem" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id", "name", "status" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "version" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "status" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "count" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "url" : { },
                    "name" : {
                      "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1/schema"
                    },
                    "title" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "publisher" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "contact" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "telecom" : {
                            "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/contactPoint"
                          }
                        }
                      }
                    },
                    "description" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "purpose" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "copyright" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "concept" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "display" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "definition" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          }
                        }
                      }
                    },
                    "valueset" : {
                      "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses.",
        "operationId" : "codesystemdeletebyid",
        "tags" : [ "Codesystem" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Codesystem/$createvalueset" : {
      "post" : {
        "description" : "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses. This is a helper operation to create a Codesystem AND a corresponding value set for a 1:1 mapping scenario between Codesystem and Valueset.",
        "operationId" : "codesystemcreatevaluesetsop",
        "tags" : [ "Codesystem" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully creates a code system and a value set",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "parameters" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "parameters" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "resource" : {
                            "description" : "A generic representation of a bundle",
                            "type" : "object",
                            "required" : [ "resource", "metadata", "type" ],
                            "properties" : {
                              "resource" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "metadata" : {
                                "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                              },
                              "id" : {
                                "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                              },
                              "type" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "total" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              },
                              "page" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              },
                              "limit" : {
                                "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                              },
                              "links" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                                }
                              },
                              "entries" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "id" : {
                                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                                    },
                                    "resource" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Codesystem~1%24createvalueset/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Valueset" : {
      "get" : {
        "description" : "Valuesets are terminology compositions from 1 or more Codesets",
        "operationId" : "valuesetgetall",
        "tags" : [ "Valueset" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/1"
        }, {
          "$ref" : "#/paths/~1Setting/get/parameters/2"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/3"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/4"
        }, {
          "$ref" : "#/paths/~1File/get/parameters/7"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search for everything",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "resource", "metadata", "id" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "type" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "total" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "page" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "limit" : {
                      "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
                      }
                    },
                    "entries" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "uri" : {
                            "$ref" : "#/paths/~1Preference/post/requestBody/content/application~1json/schema/properties/role"
                          },
                          "resource" : {
                            "type" : "object",
                            "required" : [ "metadata", "id", "name", "status" ],
                            "properties" : {
                              "resource" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "reference" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "metadata" : {
                                "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                              },
                              "id" : {
                                "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                              },
                              "version" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "status" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "url" : {
                                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                              },
                              "name" : {
                                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1/schema"
                              },
                              "title" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "publisher" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "contact" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "name" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    },
                                    "telecom" : {
                                      "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/contactPoint"
                                    }
                                  }
                                }
                              },
                              "description" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "purpose" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "copyright" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "compose" : {
                                "type" : "object",
                                "properties" : {
                                  "include" : {
                                    "type" : "array",
                                    "items" : {
                                      "type" : "object",
                                      "properties" : {
                                        "system" : {
                                          "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                                        },
                                        "version" : {
                                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                        },
                                        "valueset" : {
                                          "type" : "array",
                                          "items" : {
                                            "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                                          }
                                        },
                                        "concept" : {
                                          "type" : "array",
                                          "items" : {
                                            "type" : "object",
                                            "properties" : {
                                              "code" : {
                                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                              },
                                              "display" : {
                                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Valueset/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "post" : {
        "description" : "Valuesets are terminology compositions from 1 or more Codesets",
        "operationId" : "valuesetcreate",
        "tags" : [ "Valueset" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "metadata", "id", "name", "status" ],
                "properties" : {
                  "resource" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "reference" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "metadata" : {
                    "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                  },
                  "id" : {
                    "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                  },
                  "version" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "status" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "url" : {
                    "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                  },
                  "name" : {
                    "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1/schema"
                  },
                  "title" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "publisher" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "contact" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                        },
                        "telecom" : {
                          "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/contactPoint"
                        }
                      }
                    }
                  },
                  "description" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "purpose" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "copyright" : {
                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                  },
                  "compose" : {
                    "type" : "object",
                    "properties" : {
                      "include" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "system" : {
                              "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                            },
                            "version" : {
                              "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                            },
                            "valueset" : {
                              "type" : "array",
                              "items" : {
                                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                              }
                            },
                            "concept" : {
                              "type" : "array",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "code" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  },
                                  "display" : {
                                    "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully creates a Valueset",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Valueset/$health" : {
      "get" : {
        "description" : "Reports of the health of the device running the Valueset microservice.",
        "operationId" : "valuesethealth",
        "tags" : [ "Valueset" ],
        "responses" : {
          "200" : {
            "description" : "Successfully reports the health",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1File~1%24health/get/responses/200/content/application~1bsee%2Bjson/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Valueset/{ctsId}" : {
      "get" : {
        "description" : "Valuesets are terminology compositions from 1 or more Codesets",
        "operationId" : "valuesetgetbyid",
        "tags" : [ "Valueset" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieve",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "patch" : {
        "description" : "Valuesets are terminology compositions from 1 or more Codesets",
        "operationId" : "valuesetupdatebyid",
        "tags" : [ "Valueset" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
        } ],
        "requestBody" : {
          "description" : "A JSON Patch document describing the changes being requested",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      },
      "delete" : {
        "description" : "Valuesets are terminology compositions from 1 or more Codesets",
        "operationId" : "valuesetdeletebyid",
        "tags" : [ "Valueset" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful delete",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "409" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/delete/responses/409"
          },
          "410" : {
            "$ref" : "#/paths/~1File~1%7Bid%7D/get/responses/410"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    },
    "/Valueset/{ctsId}/$expand" : {
      "get" : {
        "description" : "Valuesets are terminology compositions from 1 or more Codesets. This is a convenience function to find and expand the terminologies. It may redirect to a global server.",
        "operationId" : "valuesetexpandop",
        "tags" : [ "Valueset" ],
        "parameters" : [ {
          "$ref" : "#/paths/~1File/get/parameters/0"
        }, {
          "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
              }
            },
            "application/bsee+json" : {
              "schema" : {
                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully creates a code system and a value set",
            "headers" : {
              "x-request-id" : {
                "$ref" : "#/paths/~1File/post/responses/201/headers/x-request-id"
              },
              "location" : {
                "$ref" : "#/paths/~1Setting/post/responses/201/headers/location"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "metadata", "id", "name", "status" ],
                  "properties" : {
                    "resource" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "reference" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "metadata" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/metadata"
                    },
                    "id" : {
                      "$ref" : "#/paths/~1Preference/post/responses/201/content/application~1json/schema/properties/id"
                    },
                    "version" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "status" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "url" : {
                      "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                    },
                    "name" : {
                      "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1/schema"
                    },
                    "title" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "publisher" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "contact" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                          },
                          "telecom" : {
                            "$ref" : "#/paths/~1Contact/post/responses/201/content/application~1json/schema/properties/contactPoint"
                          }
                        }
                      }
                    },
                    "description" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "purpose" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "copyright" : {
                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                    },
                    "compose" : {
                      "type" : "object",
                      "properties" : {
                        "include" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "system" : {
                                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                              },
                              "version" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "valueSet" : {
                                "type" : "array",
                                "items" : {
                                  "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                                }
                              },
                              "concept" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "code" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    },
                                    "display" : {
                                      "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "expansion" : {
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/paths/~1Setting/get/responses/200/content/application~1json/schema/properties/limit"
                        },
                        "contains" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "system" : {
                                "$ref" : "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
                              },
                              "version" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "code" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "display" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              },
                              "definition" : {
                                "$ref" : "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/reference"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/bsee+json" : {
                "schema" : {
                  "$ref" : "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "302" : {
            "description" : "The item was found on another server that supercedes this server, temporarily redirecting.",
            "headers" : {
              "location" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/paths/~1File/post/responses/401"
          },
          "404" : {
            "$ref" : "#/paths/~1File/post/responses/404"
          },
          "412" : {
            "$ref" : "#/paths/~1File/post/responses/412"
          },
          "413" : {
            "$ref" : "#/paths/~1File/post/responses/413"
          },
          "422" : {
            "$ref" : "#/paths/~1File/post/responses/422"
          },
          "default" : {
            "$ref" : "#/paths/~1File/post/responses/default"
          }
        }
      }
    }
  }
}